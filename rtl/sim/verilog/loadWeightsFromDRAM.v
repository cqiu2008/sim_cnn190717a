// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module loadWeightsFromDRAM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_iParaNext_ci_V_read,
        cnn_oParaNext_co_V_read,
        cnn_oParaNext_coAlign_V_read,
        cnn_wParaNext_memAddrWeights_V_read,
        cnn_cnvParaNext_kernel_h_V_read,
        m_axi_SHARED_DRAM_V_AWVALID,
        m_axi_SHARED_DRAM_V_AWREADY,
        m_axi_SHARED_DRAM_V_AWADDR,
        m_axi_SHARED_DRAM_V_AWID,
        m_axi_SHARED_DRAM_V_AWLEN,
        m_axi_SHARED_DRAM_V_AWSIZE,
        m_axi_SHARED_DRAM_V_AWBURST,
        m_axi_SHARED_DRAM_V_AWLOCK,
        m_axi_SHARED_DRAM_V_AWCACHE,
        m_axi_SHARED_DRAM_V_AWPROT,
        m_axi_SHARED_DRAM_V_AWQOS,
        m_axi_SHARED_DRAM_V_AWREGION,
        m_axi_SHARED_DRAM_V_AWUSER,
        m_axi_SHARED_DRAM_V_WVALID,
        m_axi_SHARED_DRAM_V_WREADY,
        m_axi_SHARED_DRAM_V_WDATA,
        m_axi_SHARED_DRAM_V_WSTRB,
        m_axi_SHARED_DRAM_V_WLAST,
        m_axi_SHARED_DRAM_V_WID,
        m_axi_SHARED_DRAM_V_WUSER,
        m_axi_SHARED_DRAM_V_ARVALID,
        m_axi_SHARED_DRAM_V_ARREADY,
        m_axi_SHARED_DRAM_V_ARADDR,
        m_axi_SHARED_DRAM_V_ARID,
        m_axi_SHARED_DRAM_V_ARLEN,
        m_axi_SHARED_DRAM_V_ARSIZE,
        m_axi_SHARED_DRAM_V_ARBURST,
        m_axi_SHARED_DRAM_V_ARLOCK,
        m_axi_SHARED_DRAM_V_ARCACHE,
        m_axi_SHARED_DRAM_V_ARPROT,
        m_axi_SHARED_DRAM_V_ARQOS,
        m_axi_SHARED_DRAM_V_ARREGION,
        m_axi_SHARED_DRAM_V_ARUSER,
        m_axi_SHARED_DRAM_V_RVALID,
        m_axi_SHARED_DRAM_V_RREADY,
        m_axi_SHARED_DRAM_V_RDATA,
        m_axi_SHARED_DRAM_V_RLAST,
        m_axi_SHARED_DRAM_V_RID,
        m_axi_SHARED_DRAM_V_RUSER,
        m_axi_SHARED_DRAM_V_RRESP,
        m_axi_SHARED_DRAM_V_BVALID,
        m_axi_SHARED_DRAM_V_BREADY,
        m_axi_SHARED_DRAM_V_BRESP,
        m_axi_SHARED_DRAM_V_BID,
        m_axi_SHARED_DRAM_V_BUSER,
        SHARED_DRAM_V_offset,
        wbuf_0_0_V_address0,
        wbuf_0_0_V_ce0,
        wbuf_0_0_V_we0,
        wbuf_0_0_V_d0,
        wbuf_0_1_V_address0,
        wbuf_0_1_V_ce0,
        wbuf_0_1_V_we0,
        wbuf_0_1_V_d0,
        wbuf_1_0_V_address0,
        wbuf_1_0_V_ce0,
        wbuf_1_0_V_we0,
        wbuf_1_0_V_d0,
        wbuf_1_1_V_address0,
        wbuf_1_1_V_ce0,
        wbuf_1_1_V_we0,
        wbuf_1_1_V_d0,
        wbuf_2_0_V_address0,
        wbuf_2_0_V_ce0,
        wbuf_2_0_V_we0,
        wbuf_2_0_V_d0,
        wbuf_2_1_V_address0,
        wbuf_2_1_V_ce0,
        wbuf_2_1_V_we0,
        wbuf_2_1_V_d0,
        wbuf_3_0_V_address0,
        wbuf_3_0_V_ce0,
        wbuf_3_0_V_we0,
        wbuf_3_0_V_d0,
        wbuf_3_1_V_address0,
        wbuf_3_1_V_ce0,
        wbuf_3_1_V_we0,
        wbuf_3_1_V_d0,
        wbuf_4_0_V_address0,
        wbuf_4_0_V_ce0,
        wbuf_4_0_V_we0,
        wbuf_4_0_V_d0,
        wbuf_4_1_V_address0,
        wbuf_4_1_V_ce0,
        wbuf_4_1_V_we0,
        wbuf_4_1_V_d0,
        wbuf_5_0_V_address0,
        wbuf_5_0_V_ce0,
        wbuf_5_0_V_we0,
        wbuf_5_0_V_d0,
        wbuf_5_1_V_address0,
        wbuf_5_1_V_ce0,
        wbuf_5_1_V_we0,
        wbuf_5_1_V_d0,
        wbuf_6_0_V_address0,
        wbuf_6_0_V_ce0,
        wbuf_6_0_V_we0,
        wbuf_6_0_V_d0,
        wbuf_6_1_V_address0,
        wbuf_6_1_V_ce0,
        wbuf_6_1_V_we0,
        wbuf_6_1_V_d0,
        wbuf_7_0_V_address0,
        wbuf_7_0_V_ce0,
        wbuf_7_0_V_we0,
        wbuf_7_0_V_d0,
        wbuf_7_1_V_address0,
        wbuf_7_1_V_ce0,
        wbuf_7_1_V_we0,
        wbuf_7_1_V_d0,
        wbuf_8_0_V_address0,
        wbuf_8_0_V_ce0,
        wbuf_8_0_V_we0,
        wbuf_8_0_V_d0,
        wbuf_8_1_V_address0,
        wbuf_8_1_V_ce0,
        wbuf_8_1_V_we0,
        wbuf_8_1_V_d0,
        wbuf_9_0_V_address0,
        wbuf_9_0_V_ce0,
        wbuf_9_0_V_we0,
        wbuf_9_0_V_d0,
        wbuf_9_1_V_address0,
        wbuf_9_1_V_ce0,
        wbuf_9_1_V_we0,
        wbuf_9_1_V_d0,
        wbuf_10_0_V_address0,
        wbuf_10_0_V_ce0,
        wbuf_10_0_V_we0,
        wbuf_10_0_V_d0,
        wbuf_10_1_V_address0,
        wbuf_10_1_V_ce0,
        wbuf_10_1_V_we0,
        wbuf_10_1_V_d0,
        wbuf_11_0_V_address0,
        wbuf_11_0_V_ce0,
        wbuf_11_0_V_we0,
        wbuf_11_0_V_d0,
        wbuf_11_1_V_address0,
        wbuf_11_1_V_ce0,
        wbuf_11_1_V_we0,
        wbuf_11_1_V_d0,
        wbuf_12_0_V_address0,
        wbuf_12_0_V_ce0,
        wbuf_12_0_V_we0,
        wbuf_12_0_V_d0,
        wbuf_12_1_V_address0,
        wbuf_12_1_V_ce0,
        wbuf_12_1_V_we0,
        wbuf_12_1_V_d0,
        wbuf_13_0_V_address0,
        wbuf_13_0_V_ce0,
        wbuf_13_0_V_we0,
        wbuf_13_0_V_d0,
        wbuf_13_1_V_address0,
        wbuf_13_1_V_ce0,
        wbuf_13_1_V_we0,
        wbuf_13_1_V_d0,
        wbuf_14_0_V_address0,
        wbuf_14_0_V_ce0,
        wbuf_14_0_V_we0,
        wbuf_14_0_V_d0,
        wbuf_14_1_V_address0,
        wbuf_14_1_V_ce0,
        wbuf_14_1_V_we0,
        wbuf_14_1_V_d0,
        wbuf_15_0_V_address0,
        wbuf_15_0_V_ce0,
        wbuf_15_0_V_we0,
        wbuf_15_0_V_d0,
        wbuf_15_1_V_address0,
        wbuf_15_1_V_ce0,
        wbuf_15_1_V_we0,
        wbuf_15_1_V_d0,
        wbufTmp_V_address0,
        wbufTmp_V_ce0,
        wbufTmp_V_we0,
        wbufTmp_V_d0,
        wbufTmp_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_pp0_stage0 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state18 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [12:0] cnn_iParaNext_ci_V_read;
input  [12:0] cnn_oParaNext_co_V_read;
input  [12:0] cnn_oParaNext_coAlign_V_read;
input  [31:0] cnn_wParaNext_memAddrWeights_V_read;
input  [4:0] cnn_cnvParaNext_kernel_h_V_read;
output   m_axi_SHARED_DRAM_V_AWVALID;
input   m_axi_SHARED_DRAM_V_AWREADY;
output  [31:0] m_axi_SHARED_DRAM_V_AWADDR;
output  [0:0] m_axi_SHARED_DRAM_V_AWID;
output  [31:0] m_axi_SHARED_DRAM_V_AWLEN;
output  [2:0] m_axi_SHARED_DRAM_V_AWSIZE;
output  [1:0] m_axi_SHARED_DRAM_V_AWBURST;
output  [1:0] m_axi_SHARED_DRAM_V_AWLOCK;
output  [3:0] m_axi_SHARED_DRAM_V_AWCACHE;
output  [2:0] m_axi_SHARED_DRAM_V_AWPROT;
output  [3:0] m_axi_SHARED_DRAM_V_AWQOS;
output  [3:0] m_axi_SHARED_DRAM_V_AWREGION;
output  [0:0] m_axi_SHARED_DRAM_V_AWUSER;
output   m_axi_SHARED_DRAM_V_WVALID;
input   m_axi_SHARED_DRAM_V_WREADY;
output  [127:0] m_axi_SHARED_DRAM_V_WDATA;
output  [15:0] m_axi_SHARED_DRAM_V_WSTRB;
output   m_axi_SHARED_DRAM_V_WLAST;
output  [0:0] m_axi_SHARED_DRAM_V_WID;
output  [0:0] m_axi_SHARED_DRAM_V_WUSER;
output   m_axi_SHARED_DRAM_V_ARVALID;
input   m_axi_SHARED_DRAM_V_ARREADY;
output  [31:0] m_axi_SHARED_DRAM_V_ARADDR;
output  [0:0] m_axi_SHARED_DRAM_V_ARID;
output  [31:0] m_axi_SHARED_DRAM_V_ARLEN;
output  [2:0] m_axi_SHARED_DRAM_V_ARSIZE;
output  [1:0] m_axi_SHARED_DRAM_V_ARBURST;
output  [1:0] m_axi_SHARED_DRAM_V_ARLOCK;
output  [3:0] m_axi_SHARED_DRAM_V_ARCACHE;
output  [2:0] m_axi_SHARED_DRAM_V_ARPROT;
output  [3:0] m_axi_SHARED_DRAM_V_ARQOS;
output  [3:0] m_axi_SHARED_DRAM_V_ARREGION;
output  [0:0] m_axi_SHARED_DRAM_V_ARUSER;
input   m_axi_SHARED_DRAM_V_RVALID;
output   m_axi_SHARED_DRAM_V_RREADY;
input  [127:0] m_axi_SHARED_DRAM_V_RDATA;
input   m_axi_SHARED_DRAM_V_RLAST;
input  [0:0] m_axi_SHARED_DRAM_V_RID;
input  [0:0] m_axi_SHARED_DRAM_V_RUSER;
input  [1:0] m_axi_SHARED_DRAM_V_RRESP;
input   m_axi_SHARED_DRAM_V_BVALID;
output   m_axi_SHARED_DRAM_V_BREADY;
input  [1:0] m_axi_SHARED_DRAM_V_BRESP;
input  [0:0] m_axi_SHARED_DRAM_V_BID;
input  [0:0] m_axi_SHARED_DRAM_V_BUSER;
input  [27:0] SHARED_DRAM_V_offset;
output  [8:0] wbuf_0_0_V_address0;
output   wbuf_0_0_V_ce0;
output   wbuf_0_0_V_we0;
output  [127:0] wbuf_0_0_V_d0;
output  [8:0] wbuf_0_1_V_address0;
output   wbuf_0_1_V_ce0;
output   wbuf_0_1_V_we0;
output  [127:0] wbuf_0_1_V_d0;
output  [8:0] wbuf_1_0_V_address0;
output   wbuf_1_0_V_ce0;
output   wbuf_1_0_V_we0;
output  [127:0] wbuf_1_0_V_d0;
output  [8:0] wbuf_1_1_V_address0;
output   wbuf_1_1_V_ce0;
output   wbuf_1_1_V_we0;
output  [127:0] wbuf_1_1_V_d0;
output  [8:0] wbuf_2_0_V_address0;
output   wbuf_2_0_V_ce0;
output   wbuf_2_0_V_we0;
output  [127:0] wbuf_2_0_V_d0;
output  [8:0] wbuf_2_1_V_address0;
output   wbuf_2_1_V_ce0;
output   wbuf_2_1_V_we0;
output  [127:0] wbuf_2_1_V_d0;
output  [8:0] wbuf_3_0_V_address0;
output   wbuf_3_0_V_ce0;
output   wbuf_3_0_V_we0;
output  [127:0] wbuf_3_0_V_d0;
output  [8:0] wbuf_3_1_V_address0;
output   wbuf_3_1_V_ce0;
output   wbuf_3_1_V_we0;
output  [127:0] wbuf_3_1_V_d0;
output  [8:0] wbuf_4_0_V_address0;
output   wbuf_4_0_V_ce0;
output   wbuf_4_0_V_we0;
output  [127:0] wbuf_4_0_V_d0;
output  [8:0] wbuf_4_1_V_address0;
output   wbuf_4_1_V_ce0;
output   wbuf_4_1_V_we0;
output  [127:0] wbuf_4_1_V_d0;
output  [8:0] wbuf_5_0_V_address0;
output   wbuf_5_0_V_ce0;
output   wbuf_5_0_V_we0;
output  [127:0] wbuf_5_0_V_d0;
output  [8:0] wbuf_5_1_V_address0;
output   wbuf_5_1_V_ce0;
output   wbuf_5_1_V_we0;
output  [127:0] wbuf_5_1_V_d0;
output  [8:0] wbuf_6_0_V_address0;
output   wbuf_6_0_V_ce0;
output   wbuf_6_0_V_we0;
output  [127:0] wbuf_6_0_V_d0;
output  [8:0] wbuf_6_1_V_address0;
output   wbuf_6_1_V_ce0;
output   wbuf_6_1_V_we0;
output  [127:0] wbuf_6_1_V_d0;
output  [8:0] wbuf_7_0_V_address0;
output   wbuf_7_0_V_ce0;
output   wbuf_7_0_V_we0;
output  [127:0] wbuf_7_0_V_d0;
output  [8:0] wbuf_7_1_V_address0;
output   wbuf_7_1_V_ce0;
output   wbuf_7_1_V_we0;
output  [127:0] wbuf_7_1_V_d0;
output  [8:0] wbuf_8_0_V_address0;
output   wbuf_8_0_V_ce0;
output   wbuf_8_0_V_we0;
output  [127:0] wbuf_8_0_V_d0;
output  [8:0] wbuf_8_1_V_address0;
output   wbuf_8_1_V_ce0;
output   wbuf_8_1_V_we0;
output  [127:0] wbuf_8_1_V_d0;
output  [8:0] wbuf_9_0_V_address0;
output   wbuf_9_0_V_ce0;
output   wbuf_9_0_V_we0;
output  [127:0] wbuf_9_0_V_d0;
output  [8:0] wbuf_9_1_V_address0;
output   wbuf_9_1_V_ce0;
output   wbuf_9_1_V_we0;
output  [127:0] wbuf_9_1_V_d0;
output  [8:0] wbuf_10_0_V_address0;
output   wbuf_10_0_V_ce0;
output   wbuf_10_0_V_we0;
output  [127:0] wbuf_10_0_V_d0;
output  [8:0] wbuf_10_1_V_address0;
output   wbuf_10_1_V_ce0;
output   wbuf_10_1_V_we0;
output  [127:0] wbuf_10_1_V_d0;
output  [8:0] wbuf_11_0_V_address0;
output   wbuf_11_0_V_ce0;
output   wbuf_11_0_V_we0;
output  [127:0] wbuf_11_0_V_d0;
output  [8:0] wbuf_11_1_V_address0;
output   wbuf_11_1_V_ce0;
output   wbuf_11_1_V_we0;
output  [127:0] wbuf_11_1_V_d0;
output  [8:0] wbuf_12_0_V_address0;
output   wbuf_12_0_V_ce0;
output   wbuf_12_0_V_we0;
output  [127:0] wbuf_12_0_V_d0;
output  [8:0] wbuf_12_1_V_address0;
output   wbuf_12_1_V_ce0;
output   wbuf_12_1_V_we0;
output  [127:0] wbuf_12_1_V_d0;
output  [8:0] wbuf_13_0_V_address0;
output   wbuf_13_0_V_ce0;
output   wbuf_13_0_V_we0;
output  [127:0] wbuf_13_0_V_d0;
output  [8:0] wbuf_13_1_V_address0;
output   wbuf_13_1_V_ce0;
output   wbuf_13_1_V_we0;
output  [127:0] wbuf_13_1_V_d0;
output  [8:0] wbuf_14_0_V_address0;
output   wbuf_14_0_V_ce0;
output   wbuf_14_0_V_we0;
output  [127:0] wbuf_14_0_V_d0;
output  [8:0] wbuf_14_1_V_address0;
output   wbuf_14_1_V_ce0;
output   wbuf_14_1_V_we0;
output  [127:0] wbuf_14_1_V_d0;
output  [8:0] wbuf_15_0_V_address0;
output   wbuf_15_0_V_ce0;
output   wbuf_15_0_V_we0;
output  [127:0] wbuf_15_0_V_d0;
output  [8:0] wbuf_15_1_V_address0;
output   wbuf_15_1_V_ce0;
output   wbuf_15_1_V_we0;
output  [127:0] wbuf_15_1_V_d0;
output  [9:0] wbufTmp_V_address0;
output   wbufTmp_V_ce0;
output   wbufTmp_V_we0;
output  [127:0] wbufTmp_V_d0;
input  [127:0] wbufTmp_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_SHARED_DRAM_V_ARVALID;
reg m_axi_SHARED_DRAM_V_RREADY;
reg wbuf_0_0_V_ce0;
reg wbuf_0_0_V_we0;
reg wbuf_0_1_V_ce0;
reg wbuf_0_1_V_we0;
reg wbuf_1_0_V_ce0;
reg wbuf_1_0_V_we0;
reg wbuf_1_1_V_ce0;
reg wbuf_1_1_V_we0;
reg wbuf_2_0_V_ce0;
reg wbuf_2_0_V_we0;
reg wbuf_2_1_V_ce0;
reg wbuf_2_1_V_we0;
reg wbuf_3_0_V_ce0;
reg wbuf_3_0_V_we0;
reg wbuf_3_1_V_ce0;
reg wbuf_3_1_V_we0;
reg wbuf_4_0_V_ce0;
reg wbuf_4_0_V_we0;
reg wbuf_4_1_V_ce0;
reg wbuf_4_1_V_we0;
reg wbuf_5_0_V_ce0;
reg wbuf_5_0_V_we0;
reg wbuf_5_1_V_ce0;
reg wbuf_5_1_V_we0;
reg wbuf_6_0_V_ce0;
reg wbuf_6_0_V_we0;
reg wbuf_6_1_V_ce0;
reg wbuf_6_1_V_we0;
reg wbuf_7_0_V_ce0;
reg wbuf_7_0_V_we0;
reg wbuf_7_1_V_ce0;
reg wbuf_7_1_V_we0;
reg wbuf_8_0_V_ce0;
reg wbuf_8_0_V_we0;
reg wbuf_8_1_V_ce0;
reg wbuf_8_1_V_we0;
reg wbuf_9_0_V_ce0;
reg wbuf_9_0_V_we0;
reg wbuf_9_1_V_ce0;
reg wbuf_9_1_V_we0;
reg wbuf_10_0_V_ce0;
reg wbuf_10_0_V_we0;
reg wbuf_10_1_V_ce0;
reg wbuf_10_1_V_we0;
reg wbuf_11_0_V_ce0;
reg wbuf_11_0_V_we0;
reg wbuf_11_1_V_ce0;
reg wbuf_11_1_V_we0;
reg wbuf_12_0_V_ce0;
reg wbuf_12_0_V_we0;
reg wbuf_12_1_V_ce0;
reg wbuf_12_1_V_we0;
reg wbuf_13_0_V_ce0;
reg wbuf_13_0_V_we0;
reg wbuf_13_1_V_ce0;
reg wbuf_13_1_V_we0;
reg wbuf_14_0_V_ce0;
reg wbuf_14_0_V_we0;
reg wbuf_14_1_V_ce0;
reg wbuf_14_1_V_we0;
reg wbuf_15_0_V_ce0;
reg wbuf_15_0_V_we0;
reg wbuf_15_1_V_ce0;
reg wbuf_15_1_V_we0;
reg[9:0] wbufTmp_V_address0;
reg wbufTmp_V_ce0;
reg wbufTmp_V_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    SHARED_DRAM_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond4_reg_1402;
reg    SHARED_DRAM_V_blk_n_AR;
wire    ap_CS_fsm_state4;
reg   [12:0] i_op_assign_reg_779;
reg   [12:0] i_op_assign_reg_779_pp0_iter1_reg;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [13:0] indvar_flatten_reg_791;
reg   [12:0] indvars_iv1_reg_802;
reg   [13:0] p_s_reg_811;
reg   [4:0] t_V_6_reg_822;
reg   [13:0] t_V_5_reg_833;
reg   [9:0] t_V_2_reg_844;
wire   [12:0] nextChOutAlignment_V_fu_886_p3;
reg   [12:0] nextChOutAlignment_V_reg_1301;
wire   [9:0] nextChInDiv_V_fu_904_p4;
reg   [9:0] nextChInDiv_V_reg_1306;
wire   [13:0] tmp_323_cast_fu_922_p1;
reg   [13:0] tmp_323_cast_reg_1311;
wire   [18:0] rhs_V_cast_fu_936_p1;
reg   [18:0] rhs_V_cast_reg_1316;
wire   [34:0] rhs_V_15_cast_fu_940_p1;
reg   [34:0] rhs_V_15_cast_reg_1321;
wire   [30:0] rhs_V_2_cast_fu_944_p1;
reg   [30:0] rhs_V_2_cast_reg_1326;
wire   [22:0] rhs_V_3_cast_fu_948_p1;
reg   [22:0] rhs_V_3_cast_reg_1331;
wire   [12:0] tmp_331_fu_952_p1;
reg   [12:0] tmp_331_reg_1336;
wire   [31:0] tmp_330_fu_956_p1;
reg   [31:0] tmp_330_reg_1342;
wire   [13:0] tmp_332_fu_960_p3;
reg   [13:0] tmp_332_reg_1347;
wire   [18:0] bound8_fu_1266_p2;
reg   [18:0] bound8_reg_1352;
wire   [32:0] sext2_cast_fu_972_p1;
reg   [32:0] sext2_cast_reg_1357;
wire   [18:0] indvar_flatten_next6_fu_981_p2;
reg   [18:0] indvar_flatten_next6_reg_1365;
wire    ap_CS_fsm_state2;
wire   [9:0] t_V_3_mid2_fu_992_p3;
reg   [9:0] t_V_3_mid2_reg_1370;
wire   [0:0] exitcond_flatten6_fu_976_p2;
wire   [8:0] lhs_V_4_cast_mid2_v_s_fu_1006_p3;
reg   [8:0] lhs_V_4_cast_mid2_v_s_reg_1376;
wire   [30:0] ret_V_mid2_fu_1279_p2;
reg   [30:0] ret_V_mid2_reg_1381;
wire   [31:0] addrOffset_V_fu_1051_p2;
reg   [31:0] addrOffset_V_reg_1386;
wire   [32:0] sum3_fu_1059_p2;
reg   [32:0] sum3_reg_1391;
wire    ap_CS_fsm_state3;
reg    ap_sig_ioackin_m_axi_SHARED_DRAM_V_ARREADY;
wire   [0:0] exitcond4_fu_1074_p2;
reg   [0:0] exitcond4_reg_1402_pp0_iter1_reg;
wire   [12:0] i_fu_1079_p2;
reg   [12:0] i_reg_1406;
reg    ap_enable_reg_pp0_iter0;
reg   [127:0] SHARED_DRAM_V_addr_r_reg_1411;
wire   [30:0] grp_fu_1290_p3;
reg   [30:0] ret_V_10_reg_1416;
wire    ap_CS_fsm_state14;
wire   [0:0] exitcond_flatten_fu_1093_p2;
reg   [0:0] exitcond_flatten_reg_1421;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1421_pp1_iter1_reg;
wire   [13:0] indvar_flatten_next_fu_1098_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond1_fu_1108_p2;
reg   [0:0] exitcond1_reg_1430;
wire   [4:0] ciId_V_t_mid2_v_fu_1133_p3;
reg   [4:0] ciId_V_t_mid2_v_reg_1435;
wire   [3:0] tmp_1626_fu_1141_p1;
reg   [3:0] tmp_1626_reg_1440;
wire   [12:0] indvars_iv1_mid2_fu_1150_p3;
wire   [13:0] p_mid2_fu_1158_p3;
wire   [13:0] tmp_219_fu_1166_p2;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] tmp_1628_fu_1251_p1;
wire   [9:0] coDiv16_V_fu_1255_p2;
reg   [9:0] coDiv16_V_reg_1664;
wire   [9:0] ciDiv_V_fu_1261_p2;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state10;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter2;
reg   [18:0] indvar_flatten6_reg_746;
reg   [8:0] t_V_reg_757;
reg   [9:0] t_V_3_reg_768;
reg   [12:0] ap_phi_mux_i_op_assign_phi_fu_783_p4;
reg   [4:0] ap_phi_mux_t_V_6_phi_fu_826_p4;
wire    ap_block_pp1_stage0;
reg   [9:0] ap_phi_mux_t_V_2_phi_fu_848_p4;
wire   [63:0] tmp_213_fu_1085_p1;
wire   [63:0] tmp_220_fu_1172_p1;
wire   [63:0] tmp_222_fu_1215_p1;
wire   [63:0] sum3_cast_fu_1064_p1;
reg    ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY;
wire   [13:0] lhs_V_cast_fu_856_p1;
wire   [13:0] ret_V_51_tr_fu_860_p2;
wire   [8:0] tmp_fu_876_p4;
wire   [13:0] lhs_V_cast_140_fu_894_p1;
wire   [13:0] ret_V_54_tr_fu_898_p2;
wire   [9:0] nextChOutDiv16_V_fu_866_p4;
wire   [4:0] tmp_208_fu_930_p0;
wire   [8:0] tmp_s_fu_926_p1;
wire   [4:0] tmp_208_fu_930_p1;
wire   [16:0] mulPECiChOut_fu_914_p3;
wire   [8:0] tmp_208_fu_930_p2;
wire   [0:0] exitcond_fu_987_p2;
wire   [8:0] k_V_fu_1000_p2;
wire   [18:0] lhs_V_4_cast_mid2_v_fu_1272_p2;
wire   [17:0] tmp_1624_fu_1018_p1;
wire   [17:0] rhs_V_1_cast_fu_1024_p1;
wire   [17:0] ret_V_fu_1028_p2;
wire   [34:0] ret_V_s_fu_1284_p2;
wire   [30:0] tmp_333_fu_1038_p4;
wire   [31:0] tmp_212_fu_1047_p1;
wire   [32:0] tmp_331_cast_fu_1056_p1;
wire   [12:0] tmp_1625_fu_1104_p1;
wire   [13:0] dramAddr_V_fu_1114_p2;
wire   [4:0] ciIndex_V_fu_1127_p2;
wire   [12:0] indvars_iv_next2_dup_fu_1145_p2;
wire   [13:0] t_V_5_mid2_fu_1119_p3;
wire   [9:0] t_V_2_mid2_fu_1177_p3;
wire   [8:0] tmp_1627_fu_1184_p1;
wire   [12:0] ret_V_11_fu_1188_p3;
wire   [30:0] rhs_V_18_cast_fu_1196_p1;
(* use_dsp48 = "no" *) wire   [30:0] ret_V_12_fu_1200_p2;
wire   [25:0] tmp_221_fu_1205_p4;
wire   [9:0] bound8_fu_1266_p0;
wire   [8:0] bound8_fu_1266_p1;
wire   [9:0] lhs_V_4_cast_mid2_v_fu_1272_p0;
wire   [8:0] lhs_V_4_cast_mid2_v_fu_1272_p1;
wire   [18:0] ret_V_mid2_fu_1279_p0;
wire   [12:0] ret_V_mid2_fu_1279_p1;
wire   [16:0] ret_V_s_fu_1284_p0;
wire   [17:0] ret_V_s_fu_1284_p1;
wire   [12:0] grp_fu_1290_p0;
wire   [9:0] grp_fu_1290_p1;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [18:0] bound8_fu_1266_p00;
wire   [18:0] bound8_fu_1266_p10;
wire   [22:0] grp_fu_1290_p10;
wire   [18:0] lhs_V_4_cast_mid2_v_fu_1272_p10;
wire   [30:0] ret_V_mid2_fu_1279_p00;
wire   [34:0] ret_V_s_fu_1284_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY = 1'b0;
end

cnna_mul_mul_10ns_9ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
cnna_mul_mul_10ns_9ns_19_1_1_U7(
    .din0(bound8_fu_1266_p0),
    .din1(bound8_fu_1266_p1),
    .dout(bound8_fu_1266_p2)
);

cnna_mul_mul_10ns_9ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
cnna_mul_mul_10ns_9ns_19_1_1_U8(
    .din0(lhs_V_4_cast_mid2_v_fu_1272_p0),
    .din1(lhs_V_4_cast_mid2_v_fu_1272_p1),
    .dout(lhs_V_4_cast_mid2_v_fu_1272_p2)
);

cnna_mul_mul_19ns_13ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 31 ))
cnna_mul_mul_19ns_13ns_31_1_1_U9(
    .din0(ret_V_mid2_fu_1279_p0),
    .din1(ret_V_mid2_fu_1279_p1),
    .dout(ret_V_mid2_fu_1279_p2)
);

cnna_mul_mul_17ns_18ns_35_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 35 ))
cnna_mul_mul_17ns_18ns_35_1_1_U10(
    .din0(ret_V_s_fu_1284_p0),
    .din1(ret_V_s_fu_1284_p1),
    .dout(ret_V_s_fu_1284_p2)
);

cnna_mac_muladd_13ns_10ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
cnna_mac_muladd_13ns_10ns_31ns_31_1_1_U11(
    .din0(grp_fu_1290_p0),
    .din1(grp_fu_1290_p1),
    .din2(ret_V_mid2_reg_1381),
    .dout(grp_fu_1290_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state15);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            if ((ap_sig_ioackin_m_axi_SHARED_DRAM_V_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY <= 1'b0;
            end else if ((m_axi_SHARED_DRAM_V_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_1402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_op_assign_reg_779 <= i_reg_1406;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_op_assign_reg_779 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten6_reg_746 <= indvar_flatten_next6_reg_1365;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten6_reg_746 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_791 <= indvar_flatten_next_fu_1098_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten_reg_791 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvars_iv1_reg_802 <= indvars_iv1_mid2_fu_1150_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        indvars_iv1_reg_802 <= tmp_331_reg_1336;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_s_reg_811 <= p_mid2_fu_1158_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_s_reg_811 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1421_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        t_V_2_reg_844 <= coDiv16_V_reg_1664;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_V_2_reg_844 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        t_V_3_reg_768 <= ciDiv_V_fu_1261_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_3_reg_768 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        t_V_5_reg_833 <= tmp_219_fu_1166_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_V_5_reg_833 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1421 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        t_V_6_reg_822 <= ciId_V_t_mid2_v_reg_1435;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_V_6_reg_822 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        t_V_reg_757 <= lhs_V_4_cast_mid2_v_s_reg_1376;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_757 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_1402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SHARED_DRAM_V_addr_r_reg_1411 <= m_axi_SHARED_DRAM_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_976_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        addrOffset_V_reg_1386 <= addrOffset_V_fu_1051_p2;
        lhs_V_4_cast_mid2_v_s_reg_1376 <= lhs_V_4_cast_mid2_v_s_fu_1006_p3;
        ret_V_mid2_reg_1381 <= ret_V_mid2_fu_1279_p2;
        t_V_3_mid2_reg_1370 <= t_V_3_mid2_fu_992_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bound8_reg_1352 <= bound8_fu_1266_p2;
        nextChInDiv_V_reg_1306 <= {{ret_V_54_tr_fu_898_p2[13:4]}};
        nextChOutAlignment_V_reg_1301[12 : 4] <= nextChOutAlignment_V_fu_886_p3[12 : 4];
        rhs_V_15_cast_reg_1321[16 : 8] <= rhs_V_15_cast_fu_940_p1[16 : 8];
        rhs_V_2_cast_reg_1326[12 : 0] <= rhs_V_2_cast_fu_944_p1[12 : 0];
        rhs_V_3_cast_reg_1331[12 : 0] <= rhs_V_3_cast_fu_948_p1[12 : 0];
        rhs_V_cast_reg_1316[9 : 0] <= rhs_V_cast_fu_936_p1[9 : 0];
        sext2_cast_reg_1357[27 : 0] <= sext2_cast_fu_972_p1[27 : 0];
        tmp_323_cast_reg_1311[9 : 0] <= tmp_323_cast_fu_922_p1[9 : 0];
        tmp_330_reg_1342[12 : 4] <= tmp_330_fu_956_p1[12 : 4];
        tmp_331_reg_1336[9 : 0] <= tmp_331_fu_952_p1[9 : 0];
        tmp_332_reg_1347[13 : 4] <= tmp_332_fu_960_p3[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ciId_V_t_mid2_v_reg_1435 <= ciId_V_t_mid2_v_fu_1133_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1421 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        coDiv16_V_reg_1664 <= coDiv16_V_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1093_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond1_reg_1430 <= exitcond1_fu_1108_p2;
        tmp_1626_reg_1440 <= tmp_1626_fu_1141_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond4_reg_1402 <= exitcond4_fu_1074_p2;
        exitcond4_reg_1402_pp0_iter1_reg <= exitcond4_reg_1402;
        i_op_assign_reg_779_pp0_iter1_reg <= i_op_assign_reg_779;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_1421 <= exitcond_flatten_fu_1093_p2;
        exitcond_flatten_reg_1421_pp1_iter1_reg <= exitcond_flatten_reg_1421;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1406 <= i_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_next6_reg_1365 <= indvar_flatten_next6_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ret_V_10_reg_1416 <= grp_fu_1290_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sum3_reg_1391 <= sum3_fu_1059_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SHARED_DRAM_V_blk_n_AR = m_axi_SHARED_DRAM_V_ARREADY;
    end else begin
        SHARED_DRAM_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1402 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SHARED_DRAM_V_blk_n_R = m_axi_SHARED_DRAM_V_RVALID;
    end else begin
        SHARED_DRAM_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1074_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1093_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten6_fu_976_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1402 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_op_assign_phi_fu_783_p4 = i_reg_1406;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_783_p4 = i_op_assign_reg_779;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1421_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_t_V_2_phi_fu_848_p4 = coDiv16_V_reg_1664;
    end else begin
        ap_phi_mux_t_V_2_phi_fu_848_p4 = t_V_2_reg_844;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1421 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_t_V_6_phi_fu_826_p4 = ciId_V_t_mid2_v_reg_1435;
    end else begin
        ap_phi_mux_t_V_6_phi_fu_826_p4 = t_V_6_reg_822;
    end
end

always @ (*) begin
    if (((exitcond_flatten6_fu_976_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_SHARED_DRAM_V_ARREADY = m_axi_SHARED_DRAM_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_SHARED_DRAM_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_SHARED_DRAM_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_SHARED_DRAM_V_ARVALID = 1'b1;
    end else begin
        m_axi_SHARED_DRAM_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_SHARED_DRAM_V_RREADY = 1'b1;
    end else begin
        m_axi_SHARED_DRAM_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbufTmp_V_address0 = tmp_220_fu_1172_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbufTmp_V_address0 = tmp_213_fu_1085_p1;
    end else begin
        wbufTmp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        wbufTmp_V_ce0 = 1'b1;
    end else begin
        wbufTmp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1402_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wbufTmp_V_we0 = 1'b1;
    end else begin
        wbufTmp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_0_0_V_ce0 = 1'b1;
    end else begin
        wbuf_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1626_reg_1440 == 4'd0) & (tmp_1628_fu_1251_p1 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_0_0_V_we0 = 1'b1;
    end else begin
        wbuf_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_0_1_V_ce0 = 1'b1;
    end else begin
        wbuf_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1626_reg_1440 == 4'd0) & (tmp_1628_fu_1251_p1 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_0_1_V_we0 = 1'b1;
    end else begin
        wbuf_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_10_0_V_ce0 = 1'b1;
    end else begin
        wbuf_10_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_10_0_V_we0 = 1'b1;
    end else begin
        wbuf_10_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_10_1_V_ce0 = 1'b1;
    end else begin
        wbuf_10_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_10_1_V_we0 = 1'b1;
    end else begin
        wbuf_10_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_11_0_V_ce0 = 1'b1;
    end else begin
        wbuf_11_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd11) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_11_0_V_we0 = 1'b1;
    end else begin
        wbuf_11_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_11_1_V_ce0 = 1'b1;
    end else begin
        wbuf_11_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd11) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_11_1_V_we0 = 1'b1;
    end else begin
        wbuf_11_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_12_0_V_ce0 = 1'b1;
    end else begin
        wbuf_12_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd12) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_12_0_V_we0 = 1'b1;
    end else begin
        wbuf_12_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_12_1_V_ce0 = 1'b1;
    end else begin
        wbuf_12_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd12) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_12_1_V_we0 = 1'b1;
    end else begin
        wbuf_12_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_13_0_V_ce0 = 1'b1;
    end else begin
        wbuf_13_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd13) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_13_0_V_we0 = 1'b1;
    end else begin
        wbuf_13_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_13_1_V_ce0 = 1'b1;
    end else begin
        wbuf_13_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd13) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_13_1_V_we0 = 1'b1;
    end else begin
        wbuf_13_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_14_0_V_ce0 = 1'b1;
    end else begin
        wbuf_14_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_14_0_V_we0 = 1'b1;
    end else begin
        wbuf_14_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_14_1_V_ce0 = 1'b1;
    end else begin
        wbuf_14_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_14_1_V_we0 = 1'b1;
    end else begin
        wbuf_14_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_15_0_V_ce0 = 1'b1;
    end else begin
        wbuf_15_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd15) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_15_0_V_we0 = 1'b1;
    end else begin
        wbuf_15_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_15_1_V_ce0 = 1'b1;
    end else begin
        wbuf_15_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd15) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_15_1_V_we0 = 1'b1;
    end else begin
        wbuf_15_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_1_0_V_ce0 = 1'b1;
    end else begin
        wbuf_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_1_0_V_we0 = 1'b1;
    end else begin
        wbuf_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_1_1_V_ce0 = 1'b1;
    end else begin
        wbuf_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_1_1_V_we0 = 1'b1;
    end else begin
        wbuf_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_2_0_V_ce0 = 1'b1;
    end else begin
        wbuf_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_2_0_V_we0 = 1'b1;
    end else begin
        wbuf_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_2_1_V_ce0 = 1'b1;
    end else begin
        wbuf_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_2_1_V_we0 = 1'b1;
    end else begin
        wbuf_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_3_0_V_ce0 = 1'b1;
    end else begin
        wbuf_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_3_0_V_we0 = 1'b1;
    end else begin
        wbuf_3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_3_1_V_ce0 = 1'b1;
    end else begin
        wbuf_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_3_1_V_we0 = 1'b1;
    end else begin
        wbuf_3_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_4_0_V_ce0 = 1'b1;
    end else begin
        wbuf_4_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_4_0_V_we0 = 1'b1;
    end else begin
        wbuf_4_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_4_1_V_ce0 = 1'b1;
    end else begin
        wbuf_4_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_4_1_V_we0 = 1'b1;
    end else begin
        wbuf_4_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_5_0_V_ce0 = 1'b1;
    end else begin
        wbuf_5_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_5_0_V_we0 = 1'b1;
    end else begin
        wbuf_5_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_5_1_V_ce0 = 1'b1;
    end else begin
        wbuf_5_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_5_1_V_we0 = 1'b1;
    end else begin
        wbuf_5_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_6_0_V_ce0 = 1'b1;
    end else begin
        wbuf_6_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_6_0_V_we0 = 1'b1;
    end else begin
        wbuf_6_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_6_1_V_ce0 = 1'b1;
    end else begin
        wbuf_6_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_6_1_V_we0 = 1'b1;
    end else begin
        wbuf_6_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_7_0_V_ce0 = 1'b1;
    end else begin
        wbuf_7_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_7_0_V_we0 = 1'b1;
    end else begin
        wbuf_7_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_7_1_V_ce0 = 1'b1;
    end else begin
        wbuf_7_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_7_1_V_we0 = 1'b1;
    end else begin
        wbuf_7_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_8_0_V_ce0 = 1'b1;
    end else begin
        wbuf_8_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd8) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_8_0_V_we0 = 1'b1;
    end else begin
        wbuf_8_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_8_1_V_ce0 = 1'b1;
    end else begin
        wbuf_8_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd8) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_8_1_V_we0 = 1'b1;
    end else begin
        wbuf_8_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_9_0_V_ce0 = 1'b1;
    end else begin
        wbuf_9_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd0) & (tmp_1626_reg_1440 == 4'd9) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_9_0_V_we0 = 1'b1;
    end else begin
        wbuf_9_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        wbuf_9_1_V_ce0 = 1'b1;
    end else begin
        wbuf_9_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1628_fu_1251_p1 == 1'd1) & (tmp_1626_reg_1440 == 4'd9) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wbuf_9_1_V_we0 = 1'b1;
    end else begin
        wbuf_9_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_flatten6_fu_976_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((ap_sig_ioackin_m_axi_SHARED_DRAM_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond4_fu_1074_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond4_fu_1074_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1093_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1093_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addrOffset_V_fu_1051_p2 = (tmp_212_fu_1047_p1 + cnn_wParaNext_memAddrWeights_V_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond4_reg_1402 == 1'd0) & (m_axi_SHARED_DRAM_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond4_reg_1402 == 1'd0) & (m_axi_SHARED_DRAM_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = ((exitcond4_reg_1402 == 1'd0) & (m_axi_SHARED_DRAM_V_RVALID == 1'b0));
end

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bound8_fu_1266_p0 = bound8_fu_1266_p00;

assign bound8_fu_1266_p00 = nextChInDiv_V_fu_904_p4;

assign bound8_fu_1266_p1 = bound8_fu_1266_p10;

assign bound8_fu_1266_p10 = tmp_208_fu_930_p2;

assign ciDiv_V_fu_1261_p2 = (t_V_3_mid2_reg_1370 + 10'd1);

assign ciId_V_t_mid2_v_fu_1133_p3 = ((exitcond1_fu_1108_p2[0:0] === 1'b1) ? ciIndex_V_fu_1127_p2 : ap_phi_mux_t_V_6_phi_fu_826_p4);

assign ciIndex_V_fu_1127_p2 = (5'd1 + ap_phi_mux_t_V_6_phi_fu_826_p4);

assign coDiv16_V_fu_1255_p2 = (t_V_2_mid2_fu_1177_p3 + 10'd1);

assign dramAddr_V_fu_1114_p2 = (tmp_323_cast_reg_1311 + p_s_reg_811);

assign exitcond1_fu_1108_p2 = ((tmp_1625_fu_1104_p1 == indvars_iv1_reg_802) ? 1'b1 : 1'b0);

assign exitcond4_fu_1074_p2 = ((ap_phi_mux_i_op_assign_phi_fu_783_p4 == nextChOutAlignment_V_reg_1301) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_976_p2 = ((indvar_flatten6_reg_746 == bound8_reg_1352) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1093_p2 = ((indvar_flatten_reg_791 == tmp_332_reg_1347) ? 1'b1 : 1'b0);

assign exitcond_fu_987_p2 = ((t_V_3_reg_768 == nextChInDiv_V_reg_1306) ? 1'b1 : 1'b0);

assign grp_fu_1290_p0 = rhs_V_3_cast_reg_1331;

assign grp_fu_1290_p1 = grp_fu_1290_p10;

assign grp_fu_1290_p10 = t_V_3_mid2_reg_1370;

assign i_fu_1079_p2 = (ap_phi_mux_i_op_assign_phi_fu_783_p4 + 13'd1);

assign indvar_flatten_next6_fu_981_p2 = (indvar_flatten6_reg_746 + 19'd1);

assign indvar_flatten_next_fu_1098_p2 = (indvar_flatten_reg_791 + 14'd1);

assign indvars_iv1_mid2_fu_1150_p3 = ((exitcond1_fu_1108_p2[0:0] === 1'b1) ? indvars_iv_next2_dup_fu_1145_p2 : indvars_iv1_reg_802);

assign indvars_iv_next2_dup_fu_1145_p2 = (tmp_331_reg_1336 + indvars_iv1_reg_802);

assign k_V_fu_1000_p2 = (9'd1 + t_V_reg_757);

assign lhs_V_4_cast_mid2_v_fu_1272_p0 = rhs_V_cast_reg_1316;

assign lhs_V_4_cast_mid2_v_fu_1272_p1 = lhs_V_4_cast_mid2_v_fu_1272_p10;

assign lhs_V_4_cast_mid2_v_fu_1272_p10 = lhs_V_4_cast_mid2_v_s_fu_1006_p3;

assign lhs_V_4_cast_mid2_v_s_fu_1006_p3 = ((exitcond_fu_987_p2[0:0] === 1'b1) ? k_V_fu_1000_p2 : t_V_reg_757);

assign lhs_V_cast_140_fu_894_p1 = cnn_iParaNext_ci_V_read;

assign lhs_V_cast_fu_856_p1 = cnn_oParaNext_co_V_read;

assign m_axi_SHARED_DRAM_V_ARADDR = sum3_cast_fu_1064_p1;

assign m_axi_SHARED_DRAM_V_ARBURST = 2'd0;

assign m_axi_SHARED_DRAM_V_ARCACHE = 4'd0;

assign m_axi_SHARED_DRAM_V_ARID = 1'd0;

assign m_axi_SHARED_DRAM_V_ARLEN = tmp_330_reg_1342;

assign m_axi_SHARED_DRAM_V_ARLOCK = 2'd0;

assign m_axi_SHARED_DRAM_V_ARPROT = 3'd0;

assign m_axi_SHARED_DRAM_V_ARQOS = 4'd0;

assign m_axi_SHARED_DRAM_V_ARREGION = 4'd0;

assign m_axi_SHARED_DRAM_V_ARSIZE = 3'd0;

assign m_axi_SHARED_DRAM_V_ARUSER = 1'd0;

assign m_axi_SHARED_DRAM_V_AWADDR = 32'd0;

assign m_axi_SHARED_DRAM_V_AWBURST = 2'd0;

assign m_axi_SHARED_DRAM_V_AWCACHE = 4'd0;

assign m_axi_SHARED_DRAM_V_AWID = 1'd0;

assign m_axi_SHARED_DRAM_V_AWLEN = 32'd0;

assign m_axi_SHARED_DRAM_V_AWLOCK = 2'd0;

assign m_axi_SHARED_DRAM_V_AWPROT = 3'd0;

assign m_axi_SHARED_DRAM_V_AWQOS = 4'd0;

assign m_axi_SHARED_DRAM_V_AWREGION = 4'd0;

assign m_axi_SHARED_DRAM_V_AWSIZE = 3'd0;

assign m_axi_SHARED_DRAM_V_AWUSER = 1'd0;

assign m_axi_SHARED_DRAM_V_AWVALID = 1'b0;

assign m_axi_SHARED_DRAM_V_BREADY = 1'b0;

assign m_axi_SHARED_DRAM_V_WDATA = 128'd0;

assign m_axi_SHARED_DRAM_V_WID = 1'd0;

assign m_axi_SHARED_DRAM_V_WLAST = 1'b0;

assign m_axi_SHARED_DRAM_V_WSTRB = 16'd0;

assign m_axi_SHARED_DRAM_V_WUSER = 1'd0;

assign m_axi_SHARED_DRAM_V_WVALID = 1'b0;

assign mulPECiChOut_fu_914_p3 = {{tmp_fu_876_p4}, {8'd0}};

assign nextChInDiv_V_fu_904_p4 = {{ret_V_54_tr_fu_898_p2[13:4]}};

assign nextChOutAlignment_V_fu_886_p3 = {{tmp_fu_876_p4}, {4'd0}};

assign nextChOutDiv16_V_fu_866_p4 = {{ret_V_51_tr_fu_860_p2[13:4]}};

assign p_mid2_fu_1158_p3 = ((exitcond1_fu_1108_p2[0:0] === 1'b1) ? dramAddr_V_fu_1114_p2 : p_s_reg_811);

assign ret_V_11_fu_1188_p3 = {{tmp_1627_fu_1184_p1}, {4'd0}};

assign ret_V_12_fu_1200_p2 = (rhs_V_18_cast_fu_1196_p1 + ret_V_10_reg_1416);

assign ret_V_51_tr_fu_860_p2 = (lhs_V_cast_fu_856_p1 + 14'd15);

assign ret_V_54_tr_fu_898_p2 = (lhs_V_cast_140_fu_894_p1 + 14'd15);

assign ret_V_fu_1028_p2 = (tmp_1624_fu_1018_p1 + rhs_V_1_cast_fu_1024_p1);

assign ret_V_mid2_fu_1279_p0 = ret_V_mid2_fu_1279_p00;

assign ret_V_mid2_fu_1279_p00 = lhs_V_4_cast_mid2_v_fu_1272_p2;

assign ret_V_mid2_fu_1279_p1 = rhs_V_2_cast_reg_1326;

assign ret_V_s_fu_1284_p0 = rhs_V_15_cast_reg_1321;

assign ret_V_s_fu_1284_p1 = ret_V_s_fu_1284_p10;

assign ret_V_s_fu_1284_p10 = ret_V_fu_1028_p2;

assign rhs_V_15_cast_fu_940_p1 = mulPECiChOut_fu_914_p3;

assign rhs_V_18_cast_fu_1196_p1 = ret_V_11_fu_1188_p3;

assign rhs_V_1_cast_fu_1024_p1 = t_V_3_mid2_fu_992_p3;

assign rhs_V_2_cast_fu_944_p1 = cnn_oParaNext_coAlign_V_read;

assign rhs_V_3_cast_fu_948_p1 = cnn_oParaNext_coAlign_V_read;

assign rhs_V_cast_fu_936_p1 = nextChInDiv_V_fu_904_p4;

assign sext2_cast_fu_972_p1 = SHARED_DRAM_V_offset;

assign sum3_cast_fu_1064_p1 = sum3_reg_1391;

assign sum3_fu_1059_p2 = (tmp_331_cast_fu_1056_p1 + sext2_cast_reg_1357);

assign t_V_2_mid2_fu_1177_p3 = ((exitcond1_reg_1430[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_t_V_2_phi_fu_848_p4);

assign t_V_3_mid2_fu_992_p3 = ((exitcond_fu_987_p2[0:0] === 1'b1) ? 10'd0 : t_V_3_reg_768);

assign t_V_5_mid2_fu_1119_p3 = ((exitcond1_fu_1108_p2[0:0] === 1'b1) ? dramAddr_V_fu_1114_p2 : t_V_5_reg_833);

assign tmp_1624_fu_1018_p1 = lhs_V_4_cast_mid2_v_fu_1272_p2[17:0];

assign tmp_1625_fu_1104_p1 = t_V_5_reg_833[12:0];

assign tmp_1626_fu_1141_p1 = ciId_V_t_mid2_v_fu_1133_p3[3:0];

assign tmp_1627_fu_1184_p1 = t_V_2_mid2_fu_1177_p3[8:0];

assign tmp_1628_fu_1251_p1 = t_V_2_mid2_fu_1177_p3[0:0];

assign tmp_208_fu_930_p0 = tmp_s_fu_926_p1;

assign tmp_208_fu_930_p1 = tmp_s_fu_926_p1;

assign tmp_208_fu_930_p2 = (tmp_208_fu_930_p0 * tmp_208_fu_930_p1);

assign tmp_212_fu_1047_p1 = tmp_333_fu_1038_p4;

assign tmp_213_fu_1085_p1 = i_op_assign_reg_779_pp0_iter1_reg;

assign tmp_219_fu_1166_p2 = (14'd1 + t_V_5_mid2_fu_1119_p3);

assign tmp_220_fu_1172_p1 = t_V_5_mid2_fu_1119_p3;

assign tmp_221_fu_1205_p4 = {{ret_V_12_fu_1200_p2[30:5]}};

assign tmp_222_fu_1215_p1 = tmp_221_fu_1205_p4;

assign tmp_323_cast_fu_922_p1 = nextChOutDiv16_V_fu_866_p4;

assign tmp_330_fu_956_p1 = nextChOutAlignment_V_fu_886_p3;

assign tmp_331_cast_fu_1056_p1 = addrOffset_V_reg_1386;

assign tmp_331_fu_952_p1 = nextChOutDiv16_V_fu_866_p4;

assign tmp_332_fu_960_p3 = {{nextChOutDiv16_V_fu_866_p4}, {4'd0}};

assign tmp_333_fu_1038_p4 = {{ret_V_s_fu_1284_p2[34:4]}};

assign tmp_fu_876_p4 = {{ret_V_51_tr_fu_860_p2[12:4]}};

assign tmp_s_fu_926_p1 = cnn_cnvParaNext_kernel_h_V_read;

assign wbufTmp_V_d0 = SHARED_DRAM_V_addr_r_reg_1411;

assign wbuf_0_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_0_0_V_d0 = wbufTmp_V_q0;

assign wbuf_0_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_0_1_V_d0 = wbufTmp_V_q0;

assign wbuf_10_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_10_0_V_d0 = wbufTmp_V_q0;

assign wbuf_10_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_10_1_V_d0 = wbufTmp_V_q0;

assign wbuf_11_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_11_0_V_d0 = wbufTmp_V_q0;

assign wbuf_11_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_11_1_V_d0 = wbufTmp_V_q0;

assign wbuf_12_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_12_0_V_d0 = wbufTmp_V_q0;

assign wbuf_12_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_12_1_V_d0 = wbufTmp_V_q0;

assign wbuf_13_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_13_0_V_d0 = wbufTmp_V_q0;

assign wbuf_13_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_13_1_V_d0 = wbufTmp_V_q0;

assign wbuf_14_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_14_0_V_d0 = wbufTmp_V_q0;

assign wbuf_14_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_14_1_V_d0 = wbufTmp_V_q0;

assign wbuf_15_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_15_0_V_d0 = wbufTmp_V_q0;

assign wbuf_15_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_15_1_V_d0 = wbufTmp_V_q0;

assign wbuf_1_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_1_0_V_d0 = wbufTmp_V_q0;

assign wbuf_1_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_1_1_V_d0 = wbufTmp_V_q0;

assign wbuf_2_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_2_0_V_d0 = wbufTmp_V_q0;

assign wbuf_2_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_2_1_V_d0 = wbufTmp_V_q0;

assign wbuf_3_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_3_0_V_d0 = wbufTmp_V_q0;

assign wbuf_3_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_3_1_V_d0 = wbufTmp_V_q0;

assign wbuf_4_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_4_0_V_d0 = wbufTmp_V_q0;

assign wbuf_4_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_4_1_V_d0 = wbufTmp_V_q0;

assign wbuf_5_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_5_0_V_d0 = wbufTmp_V_q0;

assign wbuf_5_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_5_1_V_d0 = wbufTmp_V_q0;

assign wbuf_6_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_6_0_V_d0 = wbufTmp_V_q0;

assign wbuf_6_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_6_1_V_d0 = wbufTmp_V_q0;

assign wbuf_7_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_7_0_V_d0 = wbufTmp_V_q0;

assign wbuf_7_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_7_1_V_d0 = wbufTmp_V_q0;

assign wbuf_8_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_8_0_V_d0 = wbufTmp_V_q0;

assign wbuf_8_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_8_1_V_d0 = wbufTmp_V_q0;

assign wbuf_9_0_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_9_0_V_d0 = wbufTmp_V_q0;

assign wbuf_9_1_V_address0 = tmp_222_fu_1215_p1;

assign wbuf_9_1_V_d0 = wbufTmp_V_q0;

always @ (posedge ap_clk) begin
    nextChOutAlignment_V_reg_1301[3:0] <= 4'b0000;
    tmp_323_cast_reg_1311[13:10] <= 4'b0000;
    rhs_V_cast_reg_1316[18:10] <= 9'b000000000;
    rhs_V_15_cast_reg_1321[7:0] <= 8'b00000000;
    rhs_V_15_cast_reg_1321[34:17] <= 18'b000000000000000000;
    rhs_V_2_cast_reg_1326[30:13] <= 18'b000000000000000000;
    rhs_V_3_cast_reg_1331[22:13] <= 10'b0000000000;
    tmp_331_reg_1336[12:10] <= 3'b000;
    tmp_330_reg_1342[3:0] <= 4'b0000;
    tmp_330_reg_1342[31:13] <= 19'b0000000000000000000;
    tmp_332_reg_1347[3:0] <= 4'b0000;
    sext2_cast_reg_1357[32:28] <= 5'b00000;
end

endmodule //loadWeightsFromDRAM
