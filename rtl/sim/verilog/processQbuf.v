// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module processQbuf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_iPara_height_read,
        cnn_iPara_ciGroup_V_read,
        cnn_oPara_width_read,
        cnn_cnvPara_kernel_w_V_read,
        qibuf_0_V_address0,
        qibuf_0_V_ce0,
        qibuf_0_V_q0,
        qibuf_1_V_address0,
        qibuf_1_V_ce0,
        qibuf_1_V_q0,
        qibuf_2_V_address0,
        qibuf_2_V_ce0,
        qibuf_2_V_q0,
        qibuf_3_V_address0,
        qibuf_3_V_ce0,
        qibuf_3_V_q0,
        qibuf_4_V_address0,
        qibuf_4_V_ce0,
        qibuf_4_V_q0,
        qibuf_5_V_address0,
        qibuf_5_V_ce0,
        qibuf_5_V_q0,
        qibuf_6_V_address0,
        qibuf_6_V_ce0,
        qibuf_6_V_q0,
        qibuf_7_V_address0,
        qibuf_7_V_ce0,
        qibuf_7_V_q0,
        qobuf_0_V_address0,
        qobuf_0_V_ce0,
        qobuf_0_V_we0,
        qobuf_0_V_d0,
        qobuf_0_V_q0,
        qobuf_1_V_address0,
        qobuf_1_V_ce0,
        qobuf_1_V_we0,
        qobuf_1_V_d0,
        qobuf_1_V_q0,
        qobuf_2_V_address0,
        qobuf_2_V_ce0,
        qobuf_2_V_we0,
        qobuf_2_V_d0,
        qobuf_2_V_q0,
        qobuf_3_V_address0,
        qobuf_3_V_ce0,
        qobuf_3_V_we0,
        qobuf_3_V_d0,
        qobuf_3_V_q0,
        qobuf_4_V_address0,
        qobuf_4_V_ce0,
        qobuf_4_V_we0,
        qobuf_4_V_d0,
        qobuf_4_V_q0,
        qobuf_5_V_address0,
        qobuf_5_V_ce0,
        qobuf_5_V_we0,
        qobuf_5_V_d0,
        qobuf_5_V_q0,
        qobuf_6_V_address0,
        qobuf_6_V_ce0,
        qobuf_6_V_we0,
        qobuf_6_V_d0,
        qobuf_6_V_q0,
        qobuf_7_V_address0,
        qobuf_7_V_ce0,
        qobuf_7_V_we0,
        qobuf_7_V_d0,
        qobuf_7_V_q0,
        hIndexPre2,
        ky
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] cnn_iPara_height_read;
input  [12:0] cnn_iPara_ciGroup_V_read;
input  [15:0] cnn_oPara_width_read;
input  [4:0] cnn_cnvPara_kernel_w_V_read;
output  [8:0] qibuf_0_V_address0;
output   qibuf_0_V_ce0;
input  [11:0] qibuf_0_V_q0;
output  [8:0] qibuf_1_V_address0;
output   qibuf_1_V_ce0;
input  [11:0] qibuf_1_V_q0;
output  [8:0] qibuf_2_V_address0;
output   qibuf_2_V_ce0;
input  [11:0] qibuf_2_V_q0;
output  [8:0] qibuf_3_V_address0;
output   qibuf_3_V_ce0;
input  [11:0] qibuf_3_V_q0;
output  [8:0] qibuf_4_V_address0;
output   qibuf_4_V_ce0;
input  [11:0] qibuf_4_V_q0;
output  [8:0] qibuf_5_V_address0;
output   qibuf_5_V_ce0;
input  [11:0] qibuf_5_V_q0;
output  [8:0] qibuf_6_V_address0;
output   qibuf_6_V_ce0;
input  [11:0] qibuf_6_V_q0;
output  [8:0] qibuf_7_V_address0;
output   qibuf_7_V_ce0;
input  [11:0] qibuf_7_V_q0;
output  [8:0] qobuf_0_V_address0;
output   qobuf_0_V_ce0;
output   qobuf_0_V_we0;
output  [23:0] qobuf_0_V_d0;
input  [23:0] qobuf_0_V_q0;
output  [8:0] qobuf_1_V_address0;
output   qobuf_1_V_ce0;
output   qobuf_1_V_we0;
output  [23:0] qobuf_1_V_d0;
input  [23:0] qobuf_1_V_q0;
output  [8:0] qobuf_2_V_address0;
output   qobuf_2_V_ce0;
output   qobuf_2_V_we0;
output  [23:0] qobuf_2_V_d0;
input  [23:0] qobuf_2_V_q0;
output  [8:0] qobuf_3_V_address0;
output   qobuf_3_V_ce0;
output   qobuf_3_V_we0;
output  [23:0] qobuf_3_V_d0;
input  [23:0] qobuf_3_V_q0;
output  [8:0] qobuf_4_V_address0;
output   qobuf_4_V_ce0;
output   qobuf_4_V_we0;
output  [23:0] qobuf_4_V_d0;
input  [23:0] qobuf_4_V_q0;
output  [8:0] qobuf_5_V_address0;
output   qobuf_5_V_ce0;
output   qobuf_5_V_we0;
output  [23:0] qobuf_5_V_d0;
input  [23:0] qobuf_5_V_q0;
output  [8:0] qobuf_6_V_address0;
output   qobuf_6_V_ce0;
output   qobuf_6_V_we0;
output  [23:0] qobuf_6_V_d0;
input  [23:0] qobuf_6_V_q0;
output  [8:0] qobuf_7_V_address0;
output   qobuf_7_V_ce0;
output   qobuf_7_V_we0;
output  [23:0] qobuf_7_V_d0;
input  [23:0] qobuf_7_V_q0;
input  [15:0] hIndexPre2;
input  [5:0] ky;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg qibuf_0_V_ce0;
reg qibuf_1_V_ce0;
reg qibuf_2_V_ce0;
reg qibuf_3_V_ce0;
reg qibuf_4_V_ce0;
reg qibuf_5_V_ce0;
reg qibuf_6_V_ce0;
reg qibuf_7_V_ce0;
reg[8:0] qobuf_0_V_address0;
reg qobuf_0_V_ce0;
reg qobuf_0_V_we0;
reg[8:0] qobuf_1_V_address0;
reg qobuf_1_V_ce0;
reg qobuf_1_V_we0;
reg[8:0] qobuf_2_V_address0;
reg qobuf_2_V_ce0;
reg qobuf_2_V_we0;
reg[8:0] qobuf_3_V_address0;
reg qobuf_3_V_ce0;
reg qobuf_3_V_we0;
reg[8:0] qobuf_4_V_address0;
reg qobuf_4_V_ce0;
reg qobuf_4_V_we0;
reg[8:0] qobuf_5_V_address0;
reg qobuf_5_V_ce0;
reg qobuf_5_V_we0;
reg[8:0] qobuf_6_V_address0;
reg qobuf_6_V_ce0;
reg qobuf_6_V_we0;
reg[8:0] qobuf_7_V_address0;
reg qobuf_7_V_ce0;
reg qobuf_7_V_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [33:0] indvar_flatten1_reg_372;
reg   [14:0] i_op_assign_2_reg_383;
reg   [17:0] indvar_flatten_reg_395;
reg   [4:0] i_op_assign_reg_406;
reg   [12:0] i_op_assign_1_reg_417;
wire   [0:0] or_cond_fu_626_p2;
wire   [15:0] tmp_s_fu_632_p1;
reg   [15:0] tmp_s_reg_887;
wire   [15:0] tmp_5_fu_636_p1;
reg   [15:0] tmp_5_reg_893;
wire   [17:0] bound_fu_821_p2;
reg   [17:0] bound_reg_898;
wire   [33:0] bound1_fu_828_p2;
reg   [33:0] bound1_reg_903;
wire   [0:0] exitcond_mid_fu_655_p2;
reg   [0:0] exitcond_mid_reg_908;
wire   [15:0] tmp_10_fu_834_p2;
reg   [15:0] tmp_10_reg_913;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
(* use_dsp48 = "no" *) wire   [15:0] tmp_fu_669_p2;
reg   [15:0] tmp_reg_918;
wire   [0:0] exitcond_flatten1_fu_674_p2;
reg   [0:0] exitcond_flatten1_reg_923;
reg   [0:0] exitcond_flatten1_reg_923_pp0_iter1_reg;
wire   [33:0] indvar_flatten_next1_fu_679_p2;
reg   [33:0] indvar_flatten_next1_reg_927;
reg    ap_enable_reg_pp0_iter0;
wire   [14:0] wog_fu_685_p2;
reg   [14:0] wog_reg_932;
wire   [0:0] exitcond_flatten_fu_691_p2;
reg   [0:0] exitcond_flatten_reg_938;
wire   [4:0] i_op_assign_mid_fu_696_p3;
reg   [4:0] i_op_assign_mid_reg_946;
wire   [0:0] exitcond_mid1_fu_717_p3;
reg   [0:0] exitcond_mid1_reg_952;
wire   [12:0] i_op_assign_1_mid2_fu_724_p3;
reg   [12:0] i_op_assign_1_mid2_reg_958;
reg   [12:0] i_op_assign_1_mid2_reg_958_pp0_iter1_reg;
wire   [17:0] indvar_flatten_op_fu_732_p2;
reg   [17:0] indvar_flatten_op_reg_972;
wire   [14:0] tmp_3_mid2_v_fu_741_p3;
reg   [14:0] tmp_3_mid2_v_reg_977;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [4:0] i_op_assign_cast_mid_2_fu_766_p3;
reg   [4:0] i_op_assign_cast_mid_2_reg_983;
wire  signed [15:0] tmp1_mid2_v_fu_778_p3;
reg  signed [15:0] tmp1_mid2_v_reg_996;
wire   [17:0] indvar_flatten_next_fu_785_p3;
reg   [17:0] indvar_flatten_next_reg_1001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [8:0] qobuf_0_V_addr_reg_1011;
reg   [8:0] qobuf_1_V_addr_reg_1021;
reg   [8:0] qobuf_2_V_addr_reg_1031;
reg   [8:0] qobuf_3_V_addr_reg_1041;
reg   [8:0] qobuf_4_V_addr_reg_1051;
reg   [8:0] qobuf_5_V_addr_reg_1061;
reg   [8:0] qobuf_6_V_addr_reg_1071;
reg   [8:0] qobuf_7_V_addr_reg_1081;
wire   [12:0] cig_fu_816_p2;
reg   [12:0] cig_reg_1086;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [23:0] op2_V_assign_qbufGen_fu_428_ap_return;
wire   [23:0] op2_V_assign_0_1_qbufGen_fu_441_ap_return;
wire   [23:0] op2_V_assign_0_2_qbufGen_fu_454_ap_return;
wire   [23:0] op2_V_assign_0_3_qbufGen_fu_467_ap_return;
wire   [23:0] op2_V_assign_0_4_qbufGen_fu_480_ap_return;
wire   [23:0] op2_V_assign_0_5_qbufGen_fu_493_ap_return;
wire   [23:0] op2_V_assign_0_6_qbufGen_fu_506_ap_return;
wire   [23:0] op2_V_assign_0_7_qbufGen_fu_519_ap_return;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    op2_V_assign_qbufGen_fu_428_ap_ready;
wire    op2_V_assign_0_1_qbufGen_fu_441_ap_ready;
wire    op2_V_assign_0_2_qbufGen_fu_454_ap_ready;
wire    op2_V_assign_0_3_qbufGen_fu_467_ap_ready;
wire    op2_V_assign_0_4_qbufGen_fu_480_ap_ready;
wire    op2_V_assign_0_5_qbufGen_fu_493_ap_ready;
wire    op2_V_assign_0_6_qbufGen_fu_506_ap_ready;
wire    op2_V_assign_0_7_qbufGen_fu_519_ap_ready;
reg   [33:0] ap_phi_mux_indvar_flatten1_phi_fu_376_p4;
wire    ap_block_pp0_stage0;
reg   [14:0] ap_phi_mux_i_op_assign_2_phi_fu_387_p4;
reg   [17:0] ap_phi_mux_indvar_flatten_phi_fu_399_p4;
reg   [4:0] ap_phi_mux_i_op_assign_phi_fu_410_p4;
reg   [12:0] ap_phi_mux_i_op_assign_1_phi_fu_421_p4;
wire    ap_block_pp0_stage1;
wire  signed [63:0] tmp_12_fu_805_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_3_mid2_fu_791_p1;
wire  signed [16:0] tmp_8_cast_fu_532_p1;
wire   [16:0] tmp_8_tr_fu_536_p2;
wire   [16:0] p_neg_fu_550_p2;
wire   [13:0] tmp_8_fu_556_p4;
wire  signed [14:0] tmp_2_fu_566_p1;
wire   [13:0] tmp_3_fu_574_p4;
wire   [15:0] tmp_9_fu_570_p1;
wire  signed [14:0] tmp_4_fu_584_p1;
wire   [0:0] tmp_15_fu_542_p3;
wire   [15:0] tmp_6_fu_588_p2;
wire   [15:0] tmp_7_fu_594_p1;
wire   [0:0] tmp_16_fu_606_p3;
wire   [0:0] tmp_1_fu_620_p2;
wire   [0:0] rev_fu_614_p2;
wire   [15:0] woGroup_fu_598_p3;
wire   [15:0] i_op_assign_cast_fu_665_p1;
wire   [0:0] exitcond_fu_712_p2;
wire   [12:0] i_op_assign_1_mid_fu_704_p3;
wire   [15:0] tmp_14_mid1_fu_840_p2;
wire   [4:0] kx_fu_757_p2;
wire   [15:0] i_op_assign_cast_mid_1_fu_762_p1;
wire   [15:0] tmp_14_mid2_fu_747_p3;
wire   [15:0] tmp1_mid231_v_fu_752_p3;
wire   [15:0] tmp_mid1_fu_772_p2;
wire  signed [15:0] grp_fu_847_p3;
wire    ap_block_pp0_stage3;
wire   [12:0] bound_fu_821_p0;
wire   [4:0] bound_fu_821_p1;
wire   [17:0] bound1_fu_828_p0;
wire   [15:0] bound1_fu_828_p1;
wire   [4:0] tmp_10_fu_834_p0;
wire   [14:0] tmp_10_fu_834_p1;
wire   [4:0] tmp_14_mid1_fu_840_p0;
wire   [14:0] tmp_14_mid1_fu_840_p1;
wire   [12:0] grp_fu_847_p0;
wire   [12:0] grp_fu_847_p2;
wire    ap_CS_fsm_state9;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [33:0] bound1_fu_828_p00;
wire   [33:0] bound1_fu_828_p10;
wire   [17:0] bound_fu_821_p00;
wire   [17:0] bound_fu_821_p10;
wire   [15:0] grp_fu_847_p20;
wire   [15:0] tmp_10_fu_834_p10;
wire   [15:0] tmp_14_mid1_fu_840_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

qbufGen op2_V_assign_qbufGen_fu_428(
    .ap_ready(op2_V_assign_qbufGen_fu_428_ap_ready),
    .qid_V_read(qibuf_0_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_0_V_q0),
    .ap_return(op2_V_assign_qbufGen_fu_428_ap_return)
);

qbufGen op2_V_assign_0_1_qbufGen_fu_441(
    .ap_ready(op2_V_assign_0_1_qbufGen_fu_441_ap_ready),
    .qid_V_read(qibuf_1_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_1_V_q0),
    .ap_return(op2_V_assign_0_1_qbufGen_fu_441_ap_return)
);

qbufGen op2_V_assign_0_2_qbufGen_fu_454(
    .ap_ready(op2_V_assign_0_2_qbufGen_fu_454_ap_ready),
    .qid_V_read(qibuf_2_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_2_V_q0),
    .ap_return(op2_V_assign_0_2_qbufGen_fu_454_ap_return)
);

qbufGen op2_V_assign_0_3_qbufGen_fu_467(
    .ap_ready(op2_V_assign_0_3_qbufGen_fu_467_ap_ready),
    .qid_V_read(qibuf_3_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_3_V_q0),
    .ap_return(op2_V_assign_0_3_qbufGen_fu_467_ap_return)
);

qbufGen op2_V_assign_0_4_qbufGen_fu_480(
    .ap_ready(op2_V_assign_0_4_qbufGen_fu_480_ap_ready),
    .qid_V_read(qibuf_4_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_4_V_q0),
    .ap_return(op2_V_assign_0_4_qbufGen_fu_480_ap_return)
);

qbufGen op2_V_assign_0_5_qbufGen_fu_493(
    .ap_ready(op2_V_assign_0_5_qbufGen_fu_493_ap_ready),
    .qid_V_read(qibuf_5_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_5_V_q0),
    .ap_return(op2_V_assign_0_5_qbufGen_fu_493_ap_return)
);

qbufGen op2_V_assign_0_6_qbufGen_fu_506(
    .ap_ready(op2_V_assign_0_6_qbufGen_fu_506_ap_ready),
    .qid_V_read(qibuf_6_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_6_V_q0),
    .ap_return(op2_V_assign_0_6_qbufGen_fu_506_ap_return)
);

qbufGen op2_V_assign_0_7_qbufGen_fu_519(
    .ap_ready(op2_V_assign_0_7_qbufGen_fu_519_ap_ready),
    .qid_V_read(qibuf_7_V_q0),
    .hIndexPre2(hIndexPre2),
    .ky(ky),
    .kx(i_op_assign_cast_mid_2_reg_983),
    .cig(i_op_assign_1_mid2_reg_958_pp0_iter1_reg),
    .qod_V_read(qobuf_7_V_q0),
    .ap_return(op2_V_assign_0_7_qbufGen_fu_519_ap_return)
);

cnna_mul_mul_13ns_5ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 18 ))
cnna_mul_mul_13ns_5ns_18_1_1_U2516(
    .din0(bound_fu_821_p0),
    .din1(bound_fu_821_p1),
    .dout(bound_fu_821_p2)
);

cnna_mul_mul_18ns_16ns_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
cnna_mul_mul_18ns_16ns_34_1_1_U2517(
    .din0(bound1_fu_828_p0),
    .din1(bound1_fu_828_p1),
    .dout(bound1_fu_828_p2)
);

cnna_mul_mul_5ns_15ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_5ns_15ns_16_1_1_U2518(
    .din0(tmp_10_fu_834_p0),
    .din1(tmp_10_fu_834_p1),
    .dout(tmp_10_fu_834_p2)
);

cnna_mul_mul_5ns_15ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_5ns_15ns_16_1_1_U2519(
    .din0(tmp_14_mid1_fu_840_p0),
    .din1(tmp_14_mid1_fu_840_p1),
    .dout(tmp_14_mid1_fu_840_p2)
);

cnna_mac_muladd_13ns_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_13ns_16s_13ns_16_1_1_U2520(
    .din0(grp_fu_847_p0),
    .din1(tmp1_mid2_v_reg_996),
    .din2(grp_fu_847_p2),
    .dout(grp_fu_847_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_1_reg_417 <= cig_reg_1086;
    end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        i_op_assign_1_reg_417 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_2_reg_383 <= tmp_3_mid2_v_reg_977;
    end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        i_op_assign_2_reg_383 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_reg_406 <= i_op_assign_cast_mid_2_reg_983;
    end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        i_op_assign_reg_406 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1_reg_372 <= indvar_flatten_next1_reg_927;
    end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_372 <= 34'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_395 <= indvar_flatten_next_reg_1001;
    end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_395 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
        bound1_reg_903 <= bound1_fu_828_p2;
        bound_reg_898 <= bound_fu_821_p2;
        exitcond_mid_reg_908 <= exitcond_mid_fu_655_p2;
        tmp_5_reg_893[12 : 0] <= tmp_5_fu_636_p1[12 : 0];
        tmp_s_reg_887[4 : 0] <= tmp_s_fu_632_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        cig_reg_1086 <= cig_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten1_reg_923 <= exitcond_flatten1_fu_674_p2;
        exitcond_flatten1_reg_923_pp0_iter1_reg <= exitcond_flatten1_reg_923;
        i_op_assign_1_mid2_reg_958_pp0_iter1_reg <= i_op_assign_1_mid2_reg_958;
        tmp_10_reg_913 <= tmp_10_fu_834_p2;
        tmp_reg_918 <= tmp_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_fu_674_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_938 <= exitcond_flatten_fu_691_p2;
        exitcond_mid1_reg_952 <= exitcond_mid1_fu_717_p3;
        i_op_assign_1_mid2_reg_958 <= i_op_assign_1_mid2_fu_724_p3;
        i_op_assign_mid_reg_946 <= i_op_assign_mid_fu_696_p3;
        indvar_flatten_op_reg_972 <= indvar_flatten_op_fu_732_p2;
        wog_reg_932 <= wog_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        i_op_assign_cast_mid_2_reg_983 <= i_op_assign_cast_mid_2_fu_766_p3;
        indvar_flatten_next_reg_1001 <= indvar_flatten_next_fu_785_p3;
        tmp_3_mid2_v_reg_977 <= tmp_3_mid2_v_fu_741_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next1_reg_927 <= indvar_flatten_next1_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        qobuf_0_V_addr_reg_1011 <= tmp_3_mid2_fu_791_p1;
        qobuf_1_V_addr_reg_1021 <= tmp_3_mid2_fu_791_p1;
        qobuf_2_V_addr_reg_1031 <= tmp_3_mid2_fu_791_p1;
        qobuf_3_V_addr_reg_1041 <= tmp_3_mid2_fu_791_p1;
        qobuf_4_V_addr_reg_1051 <= tmp_3_mid2_fu_791_p1;
        qobuf_5_V_addr_reg_1061 <= tmp_3_mid2_fu_791_p1;
        qobuf_6_V_addr_reg_1071 <= tmp_3_mid2_fu_791_p1;
        qobuf_7_V_addr_reg_1081 <= tmp_3_mid2_fu_791_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        tmp1_mid2_v_reg_996 <= tmp1_mid2_v_fu_778_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_674_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        ap_phi_mux_i_op_assign_1_phi_fu_421_p4 = cig_reg_1086;
    end else begin
        ap_phi_mux_i_op_assign_1_phi_fu_421_p4 = i_op_assign_1_reg_417;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        ap_phi_mux_i_op_assign_2_phi_fu_387_p4 = tmp_3_mid2_v_reg_977;
    end else begin
        ap_phi_mux_i_op_assign_2_phi_fu_387_p4 = i_op_assign_2_reg_383;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        ap_phi_mux_i_op_assign_phi_fu_410_p4 = i_op_assign_cast_mid_2_reg_983;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_410_p4 = i_op_assign_reg_406;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_376_p4 = indvar_flatten_next1_reg_927;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_376_p4 = indvar_flatten1_reg_372;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_923 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_399_p4 = indvar_flatten_next_reg_1001;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_399_p4 = indvar_flatten_reg_395;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_0_V_ce0 = 1'b1;
    end else begin
        qibuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_1_V_ce0 = 1'b1;
    end else begin
        qibuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_2_V_ce0 = 1'b1;
    end else begin
        qibuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_3_V_ce0 = 1'b1;
    end else begin
        qibuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_4_V_ce0 = 1'b1;
    end else begin
        qibuf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_5_V_ce0 = 1'b1;
    end else begin
        qibuf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_6_V_ce0 = 1'b1;
    end else begin
        qibuf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qibuf_7_V_ce0 = 1'b1;
    end else begin
        qibuf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_0_V_address0 = qobuf_0_V_addr_reg_1011;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_0_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_0_V_ce0 = 1'b1;
    end else begin
        qobuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_0_V_we0 = 1'b1;
    end else begin
        qobuf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_1_V_address0 = qobuf_1_V_addr_reg_1021;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_1_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_1_V_ce0 = 1'b1;
    end else begin
        qobuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_1_V_we0 = 1'b1;
    end else begin
        qobuf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_2_V_address0 = qobuf_2_V_addr_reg_1031;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_2_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_2_V_ce0 = 1'b1;
    end else begin
        qobuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_2_V_we0 = 1'b1;
    end else begin
        qobuf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_3_V_address0 = qobuf_3_V_addr_reg_1041;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_3_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_3_V_ce0 = 1'b1;
    end else begin
        qobuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_3_V_we0 = 1'b1;
    end else begin
        qobuf_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_4_V_address0 = qobuf_4_V_addr_reg_1051;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_4_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_4_V_ce0 = 1'b1;
    end else begin
        qobuf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_4_V_we0 = 1'b1;
    end else begin
        qobuf_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_5_V_address0 = qobuf_5_V_addr_reg_1061;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_5_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_5_V_ce0 = 1'b1;
    end else begin
        qobuf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_5_V_we0 = 1'b1;
    end else begin
        qobuf_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_6_V_address0 = qobuf_6_V_addr_reg_1071;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_6_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_6_V_ce0 = 1'b1;
    end else begin
        qobuf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_6_V_we0 = 1'b1;
    end else begin
        qobuf_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        qobuf_7_V_address0 = qobuf_7_V_addr_reg_1081;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        qobuf_7_V_address0 = tmp_3_mid2_fu_791_p1;
    end else begin
        qobuf_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        qobuf_7_V_ce0 = 1'b1;
    end else begin
        qobuf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_923_pp0_iter1_reg == 1'd0))) begin
        qobuf_7_V_we0 = 1'b1;
    end else begin
        qobuf_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_state1) & (or_cond_fu_626_p2 == 1'd0) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten1_fu_674_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten1_fu_674_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound1_fu_828_p0 = bound1_fu_828_p00;

assign bound1_fu_828_p00 = bound_fu_821_p2;

assign bound1_fu_828_p1 = bound1_fu_828_p10;

assign bound1_fu_828_p10 = woGroup_fu_598_p3;

assign bound_fu_821_p0 = bound_fu_821_p00;

assign bound_fu_821_p00 = cnn_iPara_ciGroup_V_read;

assign bound_fu_821_p1 = bound_fu_821_p10;

assign bound_fu_821_p10 = cnn_cnvPara_kernel_w_V_read;

assign cig_fu_816_p2 = (i_op_assign_1_mid2_reg_958 + 13'd1);

assign exitcond_flatten1_fu_674_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_376_p4 == bound1_reg_903) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_691_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_399_p4 == bound_reg_898) ? 1'b1 : 1'b0);

assign exitcond_fu_712_p2 = ((ap_phi_mux_i_op_assign_1_phi_fu_421_p4 != cnn_iPara_ciGroup_V_read) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_717_p3 = ((exitcond_flatten_fu_691_p2[0:0] === 1'b1) ? exitcond_mid_reg_908 : exitcond_fu_712_p2);

assign exitcond_mid_fu_655_p2 = ((cnn_iPara_ciGroup_V_read != 13'd0) ? 1'b1 : 1'b0);

assign grp_fu_847_p0 = tmp_5_reg_893;

assign grp_fu_847_p2 = grp_fu_847_p20;

assign grp_fu_847_p20 = i_op_assign_1_mid2_reg_958;

assign i_op_assign_1_mid2_fu_724_p3 = ((exitcond_mid1_fu_717_p3[0:0] === 1'b1) ? i_op_assign_1_mid_fu_704_p3 : 13'd0);

assign i_op_assign_1_mid_fu_704_p3 = ((exitcond_flatten_fu_691_p2[0:0] === 1'b1) ? 13'd0 : ap_phi_mux_i_op_assign_1_phi_fu_421_p4);

assign i_op_assign_cast_fu_665_p1 = ap_phi_mux_i_op_assign_phi_fu_410_p4;

assign i_op_assign_cast_mid_1_fu_762_p1 = kx_fu_757_p2;

assign i_op_assign_cast_mid_2_fu_766_p3 = ((exitcond_mid1_reg_952[0:0] === 1'b1) ? i_op_assign_mid_reg_946 : kx_fu_757_p2);

assign i_op_assign_mid_fu_696_p3 = ((exitcond_flatten_fu_691_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_i_op_assign_phi_fu_410_p4);

assign indvar_flatten_next1_fu_679_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_376_p4 + 34'd1);

assign indvar_flatten_next_fu_785_p3 = ((exitcond_flatten_reg_938[0:0] === 1'b1) ? 18'd1 : indvar_flatten_op_reg_972);

assign indvar_flatten_op_fu_732_p2 = (ap_phi_mux_indvar_flatten_phi_fu_399_p4 + 18'd1);

assign kx_fu_757_p2 = (i_op_assign_mid_reg_946 + 5'd1);

assign or_cond_fu_626_p2 = (tmp_1_fu_620_p2 & rev_fu_614_p2);

assign p_neg_fu_550_p2 = ($signed(17'd131065) - $signed(tmp_8_cast_fu_532_p1));

assign qibuf_0_V_address0 = tmp_12_fu_805_p1;

assign qibuf_1_V_address0 = tmp_12_fu_805_p1;

assign qibuf_2_V_address0 = tmp_12_fu_805_p1;

assign qibuf_3_V_address0 = tmp_12_fu_805_p1;

assign qibuf_4_V_address0 = tmp_12_fu_805_p1;

assign qibuf_5_V_address0 = tmp_12_fu_805_p1;

assign qibuf_6_V_address0 = tmp_12_fu_805_p1;

assign qibuf_7_V_address0 = tmp_12_fu_805_p1;

assign qobuf_0_V_d0 = op2_V_assign_qbufGen_fu_428_ap_return;

assign qobuf_1_V_d0 = op2_V_assign_0_1_qbufGen_fu_441_ap_return;

assign qobuf_2_V_d0 = op2_V_assign_0_2_qbufGen_fu_454_ap_return;

assign qobuf_3_V_d0 = op2_V_assign_0_3_qbufGen_fu_467_ap_return;

assign qobuf_4_V_d0 = op2_V_assign_0_4_qbufGen_fu_480_ap_return;

assign qobuf_5_V_d0 = op2_V_assign_0_5_qbufGen_fu_493_ap_return;

assign qobuf_6_V_d0 = op2_V_assign_0_6_qbufGen_fu_506_ap_return;

assign qobuf_7_V_d0 = op2_V_assign_0_7_qbufGen_fu_519_ap_return;

assign rev_fu_614_p2 = (tmp_16_fu_606_p3 ^ 1'd1);

assign tmp1_mid231_v_fu_752_p3 = ((exitcond_flatten_reg_938[0:0] === 1'b1) ? tmp_14_mid1_fu_840_p2 : tmp_reg_918);

assign tmp1_mid2_v_fu_778_p3 = ((exitcond_mid1_reg_952[0:0] === 1'b1) ? tmp1_mid231_v_fu_752_p3 : tmp_mid1_fu_772_p2);

assign tmp_10_fu_834_p0 = tmp_s_reg_887;

assign tmp_10_fu_834_p1 = tmp_10_fu_834_p10;

assign tmp_10_fu_834_p10 = ap_phi_mux_i_op_assign_2_phi_fu_387_p4;

assign tmp_12_fu_805_p1 = grp_fu_847_p3;

assign tmp_14_mid1_fu_840_p0 = tmp_s_reg_887;

assign tmp_14_mid1_fu_840_p1 = tmp_14_mid1_fu_840_p10;

assign tmp_14_mid1_fu_840_p10 = wog_reg_932;

assign tmp_14_mid2_fu_747_p3 = ((exitcond_flatten_reg_938[0:0] === 1'b1) ? tmp_14_mid1_fu_840_p2 : tmp_10_reg_913);

assign tmp_15_fu_542_p3 = tmp_8_tr_fu_536_p2[32'd16];

assign tmp_16_fu_606_p3 = hIndexPre2[32'd15];

assign tmp_1_fu_620_p2 = (($signed(cnn_iPara_height_read) > $signed(hIndexPre2)) ? 1'b1 : 1'b0);

assign tmp_2_fu_566_p1 = $signed(tmp_8_fu_556_p4);

assign tmp_3_fu_574_p4 = {{tmp_8_tr_fu_536_p2[16:3]}};

assign tmp_3_mid2_fu_791_p1 = tmp_3_mid2_v_reg_977;

assign tmp_3_mid2_v_fu_741_p3 = ((exitcond_flatten_reg_938[0:0] === 1'b1) ? wog_reg_932 : i_op_assign_2_reg_383);

assign tmp_4_fu_584_p1 = $signed(tmp_3_fu_574_p4);

assign tmp_5_fu_636_p1 = cnn_iPara_ciGroup_V_read;

assign tmp_6_fu_588_p2 = (16'd0 - tmp_9_fu_570_p1);

assign tmp_7_fu_594_p1 = $unsigned(tmp_4_fu_584_p1);

assign tmp_8_cast_fu_532_p1 = $signed(cnn_oPara_width_read);

assign tmp_8_fu_556_p4 = {{p_neg_fu_550_p2[16:3]}};

assign tmp_8_tr_fu_536_p2 = ($signed(tmp_8_cast_fu_532_p1) + $signed(17'd7));

assign tmp_9_fu_570_p1 = $unsigned(tmp_2_fu_566_p1);

assign tmp_fu_669_p2 = (i_op_assign_cast_fu_665_p1 + tmp_10_fu_834_p2);

assign tmp_mid1_fu_772_p2 = (i_op_assign_cast_mid_1_fu_762_p1 + tmp_14_mid2_fu_747_p3);

assign tmp_s_fu_632_p1 = cnn_cnvPara_kernel_w_V_read;

assign woGroup_fu_598_p3 = ((tmp_15_fu_542_p3[0:0] === 1'b1) ? tmp_6_fu_588_p2 : tmp_7_fu_594_p1);

assign wog_fu_685_p2 = (ap_phi_mux_i_op_assign_2_phi_fu_387_p4 + 15'd1);

always @ (posedge ap_clk) begin
    tmp_s_reg_887[15:5] <= 11'b00000000000;
    tmp_5_reg_893[15:13] <= 3'b000;
end

endmodule //processQbuf
