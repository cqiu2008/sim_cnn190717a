// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multiSlideWindowsFla (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_iPara_width_read,
        cnn_iPara_height_read,
        cnn_iPara_ciGroup_V_read,
        cnn_cnvPara_pad_w_V_read,
        cnn_cnvPara_kernel_w_V_read,
        cnn_cnvPara_stride_w_V_read,
        ibuf_V_address0,
        ibuf_V_ce0,
        ibuf_V_q0,
        qibuf_0_V_address0,
        qibuf_0_V_ce0,
        qibuf_0_V_we0,
        qibuf_0_V_d0,
        qibuf_0_V_address1,
        qibuf_0_V_ce1,
        qibuf_0_V_we1,
        qibuf_0_V_d1,
        qibuf_1_V_address0,
        qibuf_1_V_ce0,
        qibuf_1_V_we0,
        qibuf_1_V_d0,
        qibuf_1_V_address1,
        qibuf_1_V_ce1,
        qibuf_1_V_we1,
        qibuf_1_V_d1,
        qibuf_2_V_address0,
        qibuf_2_V_ce0,
        qibuf_2_V_we0,
        qibuf_2_V_d0,
        qibuf_2_V_address1,
        qibuf_2_V_ce1,
        qibuf_2_V_we1,
        qibuf_2_V_d1,
        qibuf_3_V_address0,
        qibuf_3_V_ce0,
        qibuf_3_V_we0,
        qibuf_3_V_d0,
        qibuf_3_V_address1,
        qibuf_3_V_ce1,
        qibuf_3_V_we1,
        qibuf_3_V_d1,
        qibuf_4_V_address0,
        qibuf_4_V_ce0,
        qibuf_4_V_we0,
        qibuf_4_V_d0,
        qibuf_4_V_address1,
        qibuf_4_V_ce1,
        qibuf_4_V_we1,
        qibuf_4_V_d1,
        qibuf_5_V_address0,
        qibuf_5_V_ce0,
        qibuf_5_V_we0,
        qibuf_5_V_d0,
        qibuf_5_V_address1,
        qibuf_5_V_ce1,
        qibuf_5_V_we1,
        qibuf_5_V_d1,
        qibuf_6_V_address0,
        qibuf_6_V_ce0,
        qibuf_6_V_we0,
        qibuf_6_V_d0,
        qibuf_6_V_address1,
        qibuf_6_V_ce1,
        qibuf_6_V_we1,
        qibuf_6_V_d1,
        qibuf_7_V_address0,
        qibuf_7_V_ce0,
        qibuf_7_V_we0,
        qibuf_7_V_d0,
        qibuf_7_V_address1,
        qibuf_7_V_ce1,
        qibuf_7_V_we1,
        qibuf_7_V_d1,
        sbufIndex_read_2,
        sbufIndex_read,
        sbuf_0_V_address0,
        sbuf_0_V_ce0,
        sbuf_0_V_we0,
        sbuf_0_V_d0,
        sbuf_0_V_address1,
        sbuf_0_V_ce1,
        sbuf_0_V_we1,
        sbuf_0_V_d1,
        sbuf_1_V_address0,
        sbuf_1_V_ce0,
        sbuf_1_V_we0,
        sbuf_1_V_d0,
        sbuf_1_V_address1,
        sbuf_1_V_ce1,
        sbuf_1_V_we1,
        sbuf_1_V_d1,
        sbuf_2_V_address0,
        sbuf_2_V_ce0,
        sbuf_2_V_we0,
        sbuf_2_V_d0,
        sbuf_2_V_address1,
        sbuf_2_V_ce1,
        sbuf_2_V_we1,
        sbuf_2_V_d1,
        sbuf_3_V_address0,
        sbuf_3_V_ce0,
        sbuf_3_V_we0,
        sbuf_3_V_d0,
        sbuf_3_V_address1,
        sbuf_3_V_ce1,
        sbuf_3_V_we1,
        sbuf_3_V_d1,
        sbuf_4_V_address0,
        sbuf_4_V_ce0,
        sbuf_4_V_we0,
        sbuf_4_V_d0,
        sbuf_4_V_address1,
        sbuf_4_V_ce1,
        sbuf_4_V_we1,
        sbuf_4_V_d1,
        sbuf_5_V_address0,
        sbuf_5_V_ce0,
        sbuf_5_V_we0,
        sbuf_5_V_d0,
        sbuf_5_V_address1,
        sbuf_5_V_ce1,
        sbuf_5_V_we1,
        sbuf_5_V_d1,
        sbuf_6_V_address0,
        sbuf_6_V_ce0,
        sbuf_6_V_we0,
        sbuf_6_V_d0,
        sbuf_6_V_address1,
        sbuf_6_V_ce1,
        sbuf_6_V_we1,
        sbuf_6_V_d1,
        sbuf_7_V_address0,
        sbuf_7_V_ce0,
        sbuf_7_V_we0,
        sbuf_7_V_d0,
        sbuf_7_V_address1,
        sbuf_7_V_ce1,
        sbuf_7_V_we1,
        sbuf_7_V_d1,
        hIndexPre1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 65'd1;
parameter    ap_ST_fsm_state2 = 65'd2;
parameter    ap_ST_fsm_state3 = 65'd4;
parameter    ap_ST_fsm_state4 = 65'd8;
parameter    ap_ST_fsm_state5 = 65'd16;
parameter    ap_ST_fsm_state6 = 65'd32;
parameter    ap_ST_fsm_state7 = 65'd64;
parameter    ap_ST_fsm_state8 = 65'd128;
parameter    ap_ST_fsm_state9 = 65'd256;
parameter    ap_ST_fsm_state10 = 65'd512;
parameter    ap_ST_fsm_state11 = 65'd1024;
parameter    ap_ST_fsm_state12 = 65'd2048;
parameter    ap_ST_fsm_state13 = 65'd4096;
parameter    ap_ST_fsm_state14 = 65'd8192;
parameter    ap_ST_fsm_state15 = 65'd16384;
parameter    ap_ST_fsm_state16 = 65'd32768;
parameter    ap_ST_fsm_state17 = 65'd65536;
parameter    ap_ST_fsm_state18 = 65'd131072;
parameter    ap_ST_fsm_state19 = 65'd262144;
parameter    ap_ST_fsm_state20 = 65'd524288;
parameter    ap_ST_fsm_state21 = 65'd1048576;
parameter    ap_ST_fsm_state22 = 65'd2097152;
parameter    ap_ST_fsm_state23 = 65'd4194304;
parameter    ap_ST_fsm_state24 = 65'd8388608;
parameter    ap_ST_fsm_state25 = 65'd16777216;
parameter    ap_ST_fsm_state26 = 65'd33554432;
parameter    ap_ST_fsm_state27 = 65'd67108864;
parameter    ap_ST_fsm_state28 = 65'd134217728;
parameter    ap_ST_fsm_state29 = 65'd268435456;
parameter    ap_ST_fsm_state30 = 65'd536870912;
parameter    ap_ST_fsm_state31 = 65'd1073741824;
parameter    ap_ST_fsm_state32 = 65'd2147483648;
parameter    ap_ST_fsm_state33 = 65'd4294967296;
parameter    ap_ST_fsm_state34 = 65'd8589934592;
parameter    ap_ST_fsm_state35 = 65'd17179869184;
parameter    ap_ST_fsm_state36 = 65'd34359738368;
parameter    ap_ST_fsm_state37 = 65'd68719476736;
parameter    ap_ST_fsm_state38 = 65'd137438953472;
parameter    ap_ST_fsm_state39 = 65'd274877906944;
parameter    ap_ST_fsm_state40 = 65'd549755813888;
parameter    ap_ST_fsm_state41 = 65'd1099511627776;
parameter    ap_ST_fsm_state42 = 65'd2199023255552;
parameter    ap_ST_fsm_state43 = 65'd4398046511104;
parameter    ap_ST_fsm_state44 = 65'd8796093022208;
parameter    ap_ST_fsm_state45 = 65'd17592186044416;
parameter    ap_ST_fsm_state46 = 65'd35184372088832;
parameter    ap_ST_fsm_state47 = 65'd70368744177664;
parameter    ap_ST_fsm_state48 = 65'd140737488355328;
parameter    ap_ST_fsm_state49 = 65'd281474976710656;
parameter    ap_ST_fsm_state50 = 65'd562949953421312;
parameter    ap_ST_fsm_state51 = 65'd1125899906842624;
parameter    ap_ST_fsm_state52 = 65'd2251799813685248;
parameter    ap_ST_fsm_state53 = 65'd4503599627370496;
parameter    ap_ST_fsm_state54 = 65'd9007199254740992;
parameter    ap_ST_fsm_state55 = 65'd18014398509481984;
parameter    ap_ST_fsm_state56 = 65'd36028797018963968;
parameter    ap_ST_fsm_state57 = 65'd72057594037927936;
parameter    ap_ST_fsm_state58 = 65'd144115188075855872;
parameter    ap_ST_fsm_state59 = 65'd288230376151711744;
parameter    ap_ST_fsm_state60 = 65'd576460752303423488;
parameter    ap_ST_fsm_state61 = 65'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 65'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage0 = 65'd4611686018427387904;
parameter    ap_ST_fsm_state68 = 65'd9223372036854775808;
parameter    ap_ST_fsm_state69 = 65'd18446744073709551616;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] cnn_iPara_width_read;
input  [15:0] cnn_iPara_height_read;
input  [12:0] cnn_iPara_ciGroup_V_read;
input  [4:0] cnn_cnvPara_pad_w_V_read;
input  [4:0] cnn_cnvPara_kernel_w_V_read;
input  [4:0] cnn_cnvPara_stride_w_V_read;
output  [9:0] ibuf_V_address0;
output   ibuf_V_ce0;
input  [127:0] ibuf_V_q0;
output  [8:0] qibuf_0_V_address0;
output   qibuf_0_V_ce0;
output   qibuf_0_V_we0;
output  [11:0] qibuf_0_V_d0;
output  [8:0] qibuf_0_V_address1;
output   qibuf_0_V_ce1;
output   qibuf_0_V_we1;
output  [11:0] qibuf_0_V_d1;
output  [8:0] qibuf_1_V_address0;
output   qibuf_1_V_ce0;
output   qibuf_1_V_we0;
output  [11:0] qibuf_1_V_d0;
output  [8:0] qibuf_1_V_address1;
output   qibuf_1_V_ce1;
output   qibuf_1_V_we1;
output  [11:0] qibuf_1_V_d1;
output  [8:0] qibuf_2_V_address0;
output   qibuf_2_V_ce0;
output   qibuf_2_V_we0;
output  [11:0] qibuf_2_V_d0;
output  [8:0] qibuf_2_V_address1;
output   qibuf_2_V_ce1;
output   qibuf_2_V_we1;
output  [11:0] qibuf_2_V_d1;
output  [8:0] qibuf_3_V_address0;
output   qibuf_3_V_ce0;
output   qibuf_3_V_we0;
output  [11:0] qibuf_3_V_d0;
output  [8:0] qibuf_3_V_address1;
output   qibuf_3_V_ce1;
output   qibuf_3_V_we1;
output  [11:0] qibuf_3_V_d1;
output  [8:0] qibuf_4_V_address0;
output   qibuf_4_V_ce0;
output   qibuf_4_V_we0;
output  [11:0] qibuf_4_V_d0;
output  [8:0] qibuf_4_V_address1;
output   qibuf_4_V_ce1;
output   qibuf_4_V_we1;
output  [11:0] qibuf_4_V_d1;
output  [8:0] qibuf_5_V_address0;
output   qibuf_5_V_ce0;
output   qibuf_5_V_we0;
output  [11:0] qibuf_5_V_d0;
output  [8:0] qibuf_5_V_address1;
output   qibuf_5_V_ce1;
output   qibuf_5_V_we1;
output  [11:0] qibuf_5_V_d1;
output  [8:0] qibuf_6_V_address0;
output   qibuf_6_V_ce0;
output   qibuf_6_V_we0;
output  [11:0] qibuf_6_V_d0;
output  [8:0] qibuf_6_V_address1;
output   qibuf_6_V_ce1;
output   qibuf_6_V_we1;
output  [11:0] qibuf_6_V_d1;
output  [8:0] qibuf_7_V_address0;
output   qibuf_7_V_ce0;
output   qibuf_7_V_we0;
output  [11:0] qibuf_7_V_d0;
output  [8:0] qibuf_7_V_address1;
output   qibuf_7_V_ce1;
output   qibuf_7_V_we1;
output  [11:0] qibuf_7_V_d1;
input  [15:0] sbufIndex_read_2;
input  [15:0] sbufIndex_read;
output  [8:0] sbuf_0_V_address0;
output   sbuf_0_V_ce0;
output   sbuf_0_V_we0;
output  [127:0] sbuf_0_V_d0;
output  [8:0] sbuf_0_V_address1;
output   sbuf_0_V_ce1;
output   sbuf_0_V_we1;
output  [127:0] sbuf_0_V_d1;
output  [8:0] sbuf_1_V_address0;
output   sbuf_1_V_ce0;
output   sbuf_1_V_we0;
output  [127:0] sbuf_1_V_d0;
output  [8:0] sbuf_1_V_address1;
output   sbuf_1_V_ce1;
output   sbuf_1_V_we1;
output  [127:0] sbuf_1_V_d1;
output  [8:0] sbuf_2_V_address0;
output   sbuf_2_V_ce0;
output   sbuf_2_V_we0;
output  [127:0] sbuf_2_V_d0;
output  [8:0] sbuf_2_V_address1;
output   sbuf_2_V_ce1;
output   sbuf_2_V_we1;
output  [127:0] sbuf_2_V_d1;
output  [8:0] sbuf_3_V_address0;
output   sbuf_3_V_ce0;
output   sbuf_3_V_we0;
output  [127:0] sbuf_3_V_d0;
output  [8:0] sbuf_3_V_address1;
output   sbuf_3_V_ce1;
output   sbuf_3_V_we1;
output  [127:0] sbuf_3_V_d1;
output  [8:0] sbuf_4_V_address0;
output   sbuf_4_V_ce0;
output   sbuf_4_V_we0;
output  [127:0] sbuf_4_V_d0;
output  [8:0] sbuf_4_V_address1;
output   sbuf_4_V_ce1;
output   sbuf_4_V_we1;
output  [127:0] sbuf_4_V_d1;
output  [8:0] sbuf_5_V_address0;
output   sbuf_5_V_ce0;
output   sbuf_5_V_we0;
output  [127:0] sbuf_5_V_d0;
output  [8:0] sbuf_5_V_address1;
output   sbuf_5_V_ce1;
output   sbuf_5_V_we1;
output  [127:0] sbuf_5_V_d1;
output  [8:0] sbuf_6_V_address0;
output   sbuf_6_V_ce0;
output   sbuf_6_V_we0;
output  [127:0] sbuf_6_V_d0;
output  [8:0] sbuf_6_V_address1;
output   sbuf_6_V_ce1;
output   sbuf_6_V_we1;
output  [127:0] sbuf_6_V_d1;
output  [8:0] sbuf_7_V_address0;
output   sbuf_7_V_ce0;
output   sbuf_7_V_we0;
output  [127:0] sbuf_7_V_d0;
output  [8:0] sbuf_7_V_address1;
output   sbuf_7_V_ce1;
output   sbuf_7_V_we1;
output  [127:0] sbuf_7_V_d1;
input  [15:0] hIndexPre1;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ibuf_V_ce0;
reg qibuf_0_V_ce0;
reg qibuf_0_V_we0;
reg qibuf_0_V_ce1;
reg qibuf_0_V_we1;
reg qibuf_1_V_ce0;
reg qibuf_1_V_we0;
reg qibuf_1_V_ce1;
reg qibuf_1_V_we1;
reg qibuf_2_V_ce0;
reg qibuf_2_V_we0;
reg qibuf_2_V_ce1;
reg qibuf_2_V_we1;
reg qibuf_3_V_ce0;
reg qibuf_3_V_we0;
reg qibuf_3_V_ce1;
reg qibuf_3_V_we1;
reg qibuf_4_V_ce0;
reg qibuf_4_V_we0;
reg qibuf_4_V_ce1;
reg qibuf_4_V_we1;
reg qibuf_5_V_ce0;
reg qibuf_5_V_we0;
reg qibuf_5_V_ce1;
reg qibuf_5_V_we1;
reg qibuf_6_V_ce0;
reg qibuf_6_V_we0;
reg qibuf_6_V_ce1;
reg qibuf_6_V_we1;
reg qibuf_7_V_ce0;
reg qibuf_7_V_we0;
reg qibuf_7_V_ce1;
reg qibuf_7_V_we1;
reg sbuf_0_V_ce0;
reg sbuf_0_V_we0;
reg sbuf_0_V_ce1;
reg sbuf_0_V_we1;
reg sbuf_1_V_ce0;
reg sbuf_1_V_we0;
reg sbuf_1_V_ce1;
reg sbuf_1_V_we1;
reg sbuf_2_V_ce0;
reg sbuf_2_V_we0;
reg sbuf_2_V_ce1;
reg sbuf_2_V_we1;
reg sbuf_3_V_ce0;
reg sbuf_3_V_we0;
reg sbuf_3_V_ce1;
reg sbuf_3_V_we1;
reg sbuf_4_V_ce0;
reg sbuf_4_V_we0;
reg sbuf_4_V_ce1;
reg sbuf_4_V_we1;
reg sbuf_5_V_ce0;
reg sbuf_5_V_we0;
reg sbuf_5_V_ce1;
reg sbuf_5_V_we1;
reg sbuf_6_V_ce0;
reg sbuf_6_V_we0;
reg sbuf_6_V_ce1;
reg sbuf_6_V_we1;
reg sbuf_7_V_ce0;
reg sbuf_7_V_we0;
reg sbuf_7_V_ce1;
reg sbuf_7_V_we1;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [64:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] t_V_reg_682;
wire   [5:0] ret_V_s_fu_702_p3;
reg   [5:0] ret_V_s_reg_2596;
wire    ap_CS_fsm_state22;
wire   [0:0] ult_fu_761_p2;
reg   [0:0] ult_reg_2626;
wire   [0:0] splitEn_fu_767_p2;
reg   [0:0] splitEn_reg_2632;
wire   [15:0] tmp_47_fu_857_p1;
reg   [15:0] tmp_47_reg_2637;
wire   [15:0] tmp_50_fu_876_p1;
reg   [15:0] tmp_50_reg_2642;
wire   [15:0] p_shl_cast2_fu_886_p1;
reg   [15:0] p_shl_cast2_reg_2647;
wire   [15:0] tmp_52_fu_904_p1;
reg   [15:0] tmp_52_reg_2653;
wire   [9:0] woConsume_fu_919_p3;
reg   [9:0] woConsume_reg_2673;
wire   [15:0] tmp_67_fu_965_p1;
reg   [15:0] tmp_67_reg_2681;
wire   [0:0] or_cond_fu_959_p2;
wire   [8:0] tmp_68_fu_969_p2;
reg   [8:0] tmp_68_reg_2694;
wire   [12:0] tmp_69_fu_975_p1;
reg   [12:0] tmp_69_reg_2699;
wire   [8:0] tmp_167_1_fu_997_p2;
reg   [8:0] tmp_167_1_reg_2711;
wire   [8:0] tmp_167_2_fu_1028_p2;
reg   [8:0] tmp_167_2_reg_2716;
wire   [15:0] tmp_170_2_fu_1034_p1;
reg   [15:0] tmp_170_2_reg_2721;
wire   [10:0] tmp_167_3_fu_1073_p2;
reg   [10:0] tmp_167_3_reg_2726;
wire   [15:0] tmp_170_3_fu_1079_p1;
reg   [15:0] tmp_170_3_reg_2731;
wire   [8:0] tmp_167_4_fu_1093_p2;
reg   [8:0] tmp_167_4_reg_2736;
wire   [15:0] tmp_170_4_fu_1099_p1;
reg   [15:0] tmp_170_4_reg_2741;
wire   [8:0] tmp_167_5_fu_1119_p2;
reg   [8:0] tmp_167_5_reg_2746;
wire   [15:0] tmp_170_5_fu_1125_p1;
reg   [15:0] tmp_170_5_reg_2751;
wire   [10:0] tmp_167_6_fu_1149_p2;
reg   [10:0] tmp_167_6_reg_2756;
wire   [15:0] tmp_170_6_fu_1155_p1;
reg   [15:0] tmp_170_6_reg_2761;
wire   [10:0] tmp_167_7_fu_1173_p2;
reg   [10:0] tmp_167_7_reg_2766;
wire   [15:0] tmp_170_7_fu_1179_p1;
reg   [15:0] tmp_170_7_reg_2771;
wire   [25:0] bound_fu_2417_p2;
reg   [25:0] bound_reg_2776;
wire   [25:0] indvar_flatten_next_fu_1228_p2;
reg   [25:0] indvar_flatten_next_reg_2784;
wire    ap_CS_fsm_state23;
wire   [8:0] woc_mid2_fu_1244_p3;
reg   [8:0] woc_mid2_reg_2789;
wire   [0:0] exitcond_flatten_fu_1223_p2;
wire   [14:0] p_mid2_fu_1252_p3;
reg   [14:0] p_mid2_reg_2794;
wire   [15:0] p_mid2_cast_fu_1260_p1;
wire   [15:0] w_fu_1295_p2;
reg   [15:0] w_reg_2804;
wire   [15:0] grp_fu_1301_p2;
wire    ap_CS_fsm_state42;
(* use_dsp48 = "no" *) wire  signed [15:0] wIndex_fu_1306_p2;
reg  signed [15:0] wIndex_reg_2824;
wire   [0:0] or_cond2_fu_1333_p2;
reg   [0:0] or_cond2_reg_2829;
wire  signed [15:0] grp_fu_2429_p3;
reg  signed [15:0] tmp1_reg_2833;
wire    ap_CS_fsm_state61;
wire   [0:0] or_cond1_fu_1501_p2;
reg   [0:0] or_cond1_reg_2838;
wire  signed [15:0] grp_fu_2442_p3;
reg  signed [15:0] tmp_1_reg_2842;
wire   [0:0] or_cond3_fu_1561_p2;
reg   [0:0] or_cond3_reg_2847;
wire  signed [15:0] grp_fu_2455_p3;
reg  signed [15:0] tmp_2_reg_2851;
wire   [0:0] or_cond4_fu_1621_p2;
reg   [0:0] or_cond4_reg_2856;
wire  signed [15:0] grp_fu_2468_p3;
reg  signed [15:0] tmp_3_reg_2860;
wire   [0:0] or_cond5_fu_1681_p2;
reg   [0:0] or_cond5_reg_2865;
wire  signed [15:0] grp_fu_2481_p3;
reg  signed [15:0] tmp_4_reg_2869;
wire   [0:0] or_cond6_fu_1741_p2;
reg   [0:0] or_cond6_reg_2874;
wire  signed [15:0] grp_fu_2494_p3;
reg  signed [15:0] tmp_5_reg_2878;
wire   [0:0] or_cond7_fu_1801_p2;
reg   [0:0] or_cond7_reg_2883;
wire  signed [15:0] grp_fu_2507_p3;
reg  signed [15:0] tmp_6_reg_2887;
wire   [0:0] or_cond8_fu_1861_p2;
reg   [0:0] or_cond8_reg_2892;
wire  signed [15:0] grp_fu_2520_p3;
reg  signed [15:0] tmp_7_reg_2896;
wire   [0:0] or_cond9_fu_1921_p2;
reg   [0:0] or_cond9_reg_2901;
wire  signed [15:0] tmp_73_fu_2527_p2;
reg  signed [15:0] tmp_73_reg_2905;
wire    ap_CS_fsm_state62;
wire  signed [15:0] tmp3_fu_2531_p2;
reg  signed [15:0] tmp3_reg_2910;
wire  signed [15:0] tmp3_1_fu_2535_p2;
reg  signed [15:0] tmp3_1_reg_2915;
wire  signed [15:0] tmp3_2_fu_2539_p2;
reg  signed [15:0] tmp3_2_reg_2920;
wire  signed [15:0] tmp3_3_fu_2543_p2;
reg  signed [15:0] tmp3_3_reg_2925;
wire  signed [15:0] tmp3_4_fu_2547_p2;
reg  signed [15:0] tmp3_4_reg_2930;
wire  signed [15:0] tmp3_5_fu_2551_p2;
reg  signed [15:0] tmp3_5_reg_2935;
wire  signed [15:0] tmp3_6_fu_2555_p2;
reg  signed [15:0] tmp3_6_reg_2940;
wire  signed [15:0] tmp3_7_fu_2559_p2;
reg  signed [15:0] tmp3_7_reg_2945;
wire   [0:0] exitcond_fu_1927_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state63_pp0_stage0_iter0;
wire    ap_block_state64_pp0_stage0_iter1;
wire    ap_block_state65_pp0_stage0_iter2;
wire    ap_block_state66_pp0_stage0_iter3;
wire    ap_block_state67_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [12:0] cig_V_fu_1932_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [63:0] tmp_109_fu_1957_p1;
reg  signed [63:0] tmp_109_reg_2964;
reg  signed [63:0] tmp_109_reg_2964_pp0_iter1_reg;
reg  signed [63:0] tmp_109_reg_2964_pp0_iter2_reg;
reg   [8:0] sbuf_0_V_addr_reg_2969;
reg   [8:0] sbuf_0_V_addr_reg_2969_pp0_iter1_reg;
reg   [8:0] sbuf_0_V_addr_reg_2969_pp0_iter2_reg;
wire  signed [63:0] tmp_181_1_fu_1968_p1;
reg  signed [63:0] tmp_181_1_reg_2980;
reg  signed [63:0] tmp_181_1_reg_2980_pp0_iter1_reg;
reg  signed [63:0] tmp_181_1_reg_2980_pp0_iter2_reg;
reg   [8:0] sbuf_1_V_addr_reg_2985;
reg   [8:0] sbuf_1_V_addr_reg_2985_pp0_iter1_reg;
reg   [8:0] sbuf_1_V_addr_reg_2985_pp0_iter2_reg;
wire  signed [63:0] tmp_181_2_fu_1979_p1;
reg  signed [63:0] tmp_181_2_reg_2996;
reg  signed [63:0] tmp_181_2_reg_2996_pp0_iter1_reg;
reg  signed [63:0] tmp_181_2_reg_2996_pp0_iter2_reg;
reg   [8:0] sbuf_2_V_addr_reg_3001;
reg   [8:0] sbuf_2_V_addr_reg_3001_pp0_iter1_reg;
reg   [8:0] sbuf_2_V_addr_reg_3001_pp0_iter2_reg;
wire  signed [63:0] tmp_181_3_fu_1990_p1;
reg  signed [63:0] tmp_181_3_reg_3012;
reg  signed [63:0] tmp_181_3_reg_3012_pp0_iter1_reg;
reg  signed [63:0] tmp_181_3_reg_3012_pp0_iter2_reg;
reg   [8:0] sbuf_3_V_addr_reg_3017;
reg   [8:0] sbuf_3_V_addr_reg_3017_pp0_iter1_reg;
reg   [8:0] sbuf_3_V_addr_reg_3017_pp0_iter2_reg;
wire  signed [63:0] tmp_181_4_fu_2001_p1;
reg  signed [63:0] tmp_181_4_reg_3028;
reg  signed [63:0] tmp_181_4_reg_3028_pp0_iter1_reg;
reg  signed [63:0] tmp_181_4_reg_3028_pp0_iter2_reg;
reg   [8:0] sbuf_4_V_addr_reg_3033;
reg   [8:0] sbuf_4_V_addr_reg_3033_pp0_iter1_reg;
reg   [8:0] sbuf_4_V_addr_reg_3033_pp0_iter2_reg;
wire  signed [63:0] tmp_181_5_fu_2012_p1;
reg  signed [63:0] tmp_181_5_reg_3044;
reg  signed [63:0] tmp_181_5_reg_3044_pp0_iter1_reg;
reg  signed [63:0] tmp_181_5_reg_3044_pp0_iter2_reg;
reg   [8:0] sbuf_5_V_addr_reg_3049;
reg   [8:0] sbuf_5_V_addr_reg_3049_pp0_iter1_reg;
reg   [8:0] sbuf_5_V_addr_reg_3049_pp0_iter2_reg;
wire  signed [63:0] tmp_181_6_fu_2023_p1;
reg  signed [63:0] tmp_181_6_reg_3060;
reg  signed [63:0] tmp_181_6_reg_3060_pp0_iter1_reg;
reg  signed [63:0] tmp_181_6_reg_3060_pp0_iter2_reg;
reg   [8:0] sbuf_6_V_addr_reg_3065;
reg   [8:0] sbuf_6_V_addr_reg_3065_pp0_iter1_reg;
reg   [8:0] sbuf_6_V_addr_reg_3065_pp0_iter2_reg;
wire  signed [63:0] tmp_181_7_fu_2034_p1;
reg  signed [63:0] tmp_181_7_reg_3076;
reg  signed [63:0] tmp_181_7_reg_3076_pp0_iter1_reg;
reg  signed [63:0] tmp_181_7_reg_3076_pp0_iter2_reg;
reg   [8:0] sbuf_7_V_addr_reg_3081;
reg   [8:0] sbuf_7_V_addr_reg_3081_pp0_iter1_reg;
reg   [8:0] sbuf_7_V_addr_reg_3081_pp0_iter2_reg;
wire   [11:0] ret_V_10_fu_2398_p2;
wire   [8:0] woc_1_fu_2412_p2;
wire    ap_CS_fsm_state68;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state63;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg   [25:0] indvar_flatten_reg_639;
reg   [14:0] wog_reg_650;
reg   [8:0] woc_reg_661;
reg   [15:0] id_reg_672;
reg   [15:0] sbufIndex_write_assi_reg_693;
wire  signed [63:0] tmp_77_fu_1947_p1;
wire    ap_block_pp0_stage0;
wire  signed [15:0] rhs_V_8_cast_fu_714_p0;
wire   [16:0] ret_V_cast_fu_710_p1;
wire  signed [16:0] rhs_V_8_cast_fu_714_p1;
wire   [16:0] ret_V_1_fu_718_p2;
wire   [16:0] rhs_V_9_cast_fu_724_p1;
wire   [16:0] ret_V_2_fu_728_p2;
wire  signed [17:0] grp_fu_742_p0;
wire   [5:0] grp_fu_742_p1;
wire   [7:0] tmp_cast_fu_758_p1;
wire   [7:0] ret_V_9_fu_751_p3;
wire   [15:0] grp_fu_742_p2;
wire   [15:0] tmp_1545_fu_773_p1;
wire   [15:0] woTotal_fu_777_p2;
wire  signed [16:0] tmp_68_cast_fu_783_p1;
wire   [16:0] tmp_110_tr_fu_787_p2;
wire   [16:0] p_neg_fu_801_p2;
wire   [13:0] tmp_302_fu_807_p4;
wire  signed [14:0] tmp_303_fu_817_p1;
wire   [13:0] tmp_304_fu_825_p4;
wire   [15:0] tmp_s_fu_821_p1;
wire  signed [14:0] tmp_305_fu_835_p1;
wire   [0:0] tmp_1546_fu_793_p3;
wire   [15:0] tmp_61_fu_839_p2;
wire   [15:0] tmp_62_fu_845_p1;
wire  signed [15:0] tmp_49_fu_863_p0;
wire   [15:0] tmp_48_cast_fu_860_p1;
wire   [15:0] tmp_49_fu_863_p2;
wire   [15:0] tmp_64_fu_849_p3;
wire   [8:0] p_shl_cast_fu_890_p1;
wire   [8:0] tmp_50_cast1_fu_879_p1;
wire  signed [8:0] tmp_51_fu_894_p2;
wire  signed [9:0] tmp_51_cast_fu_900_p1;
wire   [9:0] tmp_52_cast1_fu_907_p1;
wire   [9:0] tmp_53_fu_913_p2;
wire   [0:0] slt_fu_935_p2;
wire   [0:0] tmp_1547_fu_927_p3;
wire   [0:0] tmp_55_fu_947_p2;
wire   [0:0] tmp2_fu_953_p2;
wire   [0:0] rev_fu_941_p2;
wire   [8:0] tmp_52_cast_fu_910_p1;
wire   [5:0] lhs_V_22_1_cast_fu_978_p1;
wire   [5:0] rhs_V_18_1_cast_fu_984_p1;
wire   [5:0] ret_V_26_1_fu_987_p2;
wire   [8:0] tmp_166_1_cast_fu_993_p1;
wire   [5:0] ret_V_25_2_fu_1003_p3;
wire   [6:0] lhs_V_22_2_cast_fu_1014_p1;
wire   [6:0] rhs_V_18_1_cast2_fu_981_p1;
wire   [6:0] ret_V_26_2_fu_1018_p2;
wire   [8:0] tmp_166_2_cast_fu_1024_p1;
wire   [6:0] p_shl1_fu_1038_p3;
wire   [7:0] p_shl1_cast_fu_1045_p1;
wire   [7:0] rhs_V_cast_fu_748_p1;
wire   [7:0] ret_V_25_3_fu_1049_p2;
wire  signed [8:0] ret_V_25_3_cast_fu_1055_p1;
wire   [9:0] lhs_V_22_3_fu_1059_p1;
wire   [9:0] ret_V_26_3_fu_1063_p2;
wire   [10:0] tmp_166_3_cast_fu_1069_p1;
wire   [10:0] p_shl_cast1_fu_882_p1;
wire   [7:0] ret_V_26_4_fu_1083_p2;
wire   [8:0] tmp_166_4_cast_fu_1089_p1;
wire   [7:0] ret_V_25_5_fu_1103_p2;
wire   [7:0] ret_V_26_5_fu_1109_p2;
wire   [8:0] tmp_166_5_cast_fu_1115_p1;
wire   [8:0] ret_V_25_2_cast_fu_1010_p1;
wire   [8:0] ret_V_25_6_fu_1129_p2;
wire   [9:0] lhs_V_22_6_fu_1135_p1;
wire   [9:0] ret_V_26_6_fu_1139_p2;
wire   [10:0] tmp_166_6_cast_fu_1145_p1;
wire   [9:0] lhs_V_22_7_fu_1159_p1;
wire   [9:0] ret_V_26_7_fu_1163_p2;
wire   [10:0] tmp_166_7_cast_fu_1169_p1;
wire   [15:0] woGroup_fu_868_p3;
wire   [12:0] tmp_1548_fu_1195_p1;
wire   [15:0] wog_cast_mid1_fu_1191_p1;
wire   [15:0] mt_fu_1199_p3;
wire   [9:0] woc_cast_fu_1214_p1;
wire   [14:0] wog_s_fu_1234_p2;
wire   [0:0] tmp_59_fu_1218_p2;
wire   [12:0] tmp_1549_fu_1264_p1;
wire   [15:0] wog_cast_fu_1240_p1;
wire   [15:0] mt_mid1_fu_1268_p3;
wire   [15:0] tmp_58_fu_1207_p3;
wire   [15:0] tmp_58_mid1_fu_1276_p3;
wire   [15:0] woc_cast1_fu_1291_p1;
wire   [15:0] tmp_58_mid2_fu_1283_p3;
wire   [15:0] grp_fu_1301_p0;
wire   [8:0] grp_fu_1301_p1;
wire   [8:0] grp_fu_1310_p1;
wire   [0:0] tmp_1552_fu_1314_p3;
wire  signed [15:0] tmp_74_fu_1328_p1;
wire   [0:0] tmp_74_fu_1328_p2;
wire   [0:0] rev1_fu_1322_p2;
wire   [10:0] grp_fu_1310_p2;
wire   [8:0] tmp_1551_fu_1343_p1;
wire   [0:0] slt1_fu_1353_p2;
wire   [0:0] slt2_fu_1364_p2;
wire   [0:0] slt3_fu_1375_p2;
wire   [10:0] tmp_1550_fu_1339_p1;
wire   [0:0] slt4_fu_1386_p2;
wire   [0:0] slt5_fu_1397_p2;
wire   [0:0] slt6_fu_1408_p2;
wire   [0:0] slt7_fu_1419_p2;
wire   [0:0] slt8_fu_1430_p2;
wire   [0:0] tmp_64_not_fu_1441_p2;
wire   [0:0] tmp4_fu_1447_p2;
wire   [0:0] rev2_fu_1358_p2;
wire   [0:0] brmerge1_fu_1452_p2;
wire   [15:0] tmp_65_fu_1347_p2;
wire  signed [15:0] id_tmp_s_fu_1458_p3;
wire  signed [12:0] tmp_95_fu_2423_p2;
wire   [15:0] tmp_97_fu_1470_p3;
(* use_dsp48 = "no" *) wire   [15:0] p_s_fu_1477_p2;
wire   [0:0] tmp_1554_fu_1482_p3;
wire   [0:0] tmp_108_fu_1496_p2;
wire   [0:0] rev10_fu_1490_p2;
wire   [0:0] rev3_fu_1369_p2;
wire   [0:0] brmerge2_fu_1507_p2;
wire  signed [15:0] id_tmp_1_fu_1513_p3;
wire  signed [12:0] tmp_16989_1_fu_2436_p2;
wire   [15:0] tmp_169_1_fu_1525_p3;
wire   [15:0] p_1_fu_1532_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_1_fu_1537_p2;
wire   [0:0] tmp_1556_fu_1542_p3;
wire   [0:0] tmp_178_1_fu_1556_p2;
wire   [0:0] rev11_fu_1550_p2;
wire   [0:0] rev4_fu_1380_p2;
wire   [0:0] brmerge3_fu_1567_p2;
wire  signed [15:0] id_tmp_2_fu_1573_p3;
wire  signed [12:0] tmp_16989_2_fu_2449_p2;
wire   [15:0] tmp_169_2_fu_1585_p3;
wire   [15:0] p_2_fu_1592_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_2_fu_1597_p2;
wire   [0:0] tmp_1558_fu_1602_p3;
wire   [0:0] tmp_178_2_fu_1616_p2;
wire   [0:0] rev12_fu_1610_p2;
wire   [0:0] rev5_fu_1391_p2;
wire   [0:0] brmerge4_fu_1627_p2;
wire  signed [15:0] id_tmp_3_fu_1633_p3;
wire  signed [12:0] tmp_16989_3_fu_2462_p2;
wire   [15:0] tmp_169_3_fu_1645_p3;
wire   [15:0] p_3_fu_1652_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_3_fu_1657_p2;
wire   [0:0] tmp_1560_fu_1662_p3;
wire   [0:0] tmp_178_3_fu_1676_p2;
wire   [0:0] rev13_fu_1670_p2;
wire   [0:0] rev6_fu_1402_p2;
wire   [0:0] brmerge5_fu_1687_p2;
wire  signed [15:0] id_tmp_4_fu_1693_p3;
wire  signed [12:0] tmp_16989_4_fu_2475_p2;
wire   [15:0] tmp_169_4_fu_1705_p3;
wire   [15:0] p_4_fu_1712_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_4_fu_1717_p2;
wire   [0:0] tmp_1562_fu_1722_p3;
wire   [0:0] tmp_178_4_fu_1736_p2;
wire   [0:0] rev14_fu_1730_p2;
wire   [0:0] rev7_fu_1413_p2;
wire   [0:0] brmerge6_fu_1747_p2;
wire  signed [15:0] id_tmp_5_fu_1753_p3;
wire  signed [12:0] tmp_16989_5_fu_2488_p2;
wire   [15:0] tmp_169_5_fu_1765_p3;
wire   [15:0] p_5_fu_1772_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_5_fu_1777_p2;
wire   [0:0] tmp_1564_fu_1782_p3;
wire   [0:0] tmp_178_5_fu_1796_p2;
wire   [0:0] rev15_fu_1790_p2;
wire   [0:0] rev8_fu_1424_p2;
wire   [0:0] brmerge7_fu_1807_p2;
wire  signed [15:0] id_tmp_6_fu_1813_p3;
wire  signed [12:0] tmp_16989_6_fu_2501_p2;
wire   [15:0] tmp_169_6_fu_1825_p3;
wire   [15:0] p_6_fu_1832_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_6_fu_1837_p2;
wire   [0:0] tmp_1566_fu_1842_p3;
wire   [0:0] tmp_178_6_fu_1856_p2;
wire   [0:0] rev16_fu_1850_p2;
wire   [0:0] rev9_fu_1435_p2;
wire   [0:0] brmerge8_fu_1867_p2;
wire  signed [15:0] id_tmp_7_fu_1873_p3;
wire  signed [12:0] tmp_16989_7_fu_2514_p2;
wire   [15:0] tmp_169_7_fu_1885_p3;
wire   [15:0] p_7_fu_1892_p2;
(* use_dsp48 = "no" *) wire   [15:0] i_op_assign_8_7_fu_1897_p2;
wire   [0:0] tmp_1568_fu_1902_p3;
wire   [0:0] tmp_178_7_fu_1916_p2;
wire   [0:0] rev17_fu_1910_p2;
wire   [15:0] tmp_76_fu_1938_p1;
(* use_dsp48 = "no" *) wire   [15:0] ibufAddr_fu_1942_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_106_fu_1952_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_1_fu_1963_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_2_fu_1974_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_3_fu_1985_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_4_fu_1996_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_5_fu_2007_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_6_fu_2018_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_174_7_fu_2029_p2;
wire   [7:0] tmp_1569_fu_2040_p1;
wire   [7:0] p_Result_1_fu_2044_p4;
wire   [8:0] tmp_78_fu_2194_p1;
wire   [8:0] tmp_79_fu_2198_p1;
wire   [7:0] p_Result_2_fu_2054_p4;
wire   [7:0] p_Result_3_fu_2064_p4;
wire   [8:0] tmp_80_fu_2208_p1;
wire   [8:0] tmp_81_fu_2212_p1;
wire   [7:0] p_Result_4_fu_2074_p4;
wire   [7:0] p_Result_5_fu_2084_p4;
wire   [8:0] tmp_82_fu_2222_p1;
wire   [8:0] tmp_83_fu_2226_p1;
wire   [7:0] p_Result_6_fu_2094_p4;
wire   [7:0] p_Result_7_fu_2104_p4;
wire   [8:0] tmp_84_fu_2236_p1;
wire   [8:0] tmp_85_fu_2240_p1;
wire   [7:0] p_Result_8_fu_2114_p4;
wire   [7:0] p_Result_9_fu_2124_p4;
wire   [8:0] tmp_86_fu_2250_p1;
wire   [8:0] tmp_87_fu_2254_p1;
wire   [7:0] p_Result_s_fu_2134_p4;
wire   [7:0] p_Result_10_fu_2144_p4;
wire   [8:0] tmp_88_fu_2264_p1;
wire   [8:0] tmp_89_fu_2268_p1;
wire   [7:0] p_Result_11_fu_2154_p4;
wire   [7:0] p_Result_12_fu_2164_p4;
wire   [8:0] tmp_90_fu_2278_p1;
wire   [8:0] tmp_91_fu_2282_p1;
wire   [7:0] p_Result_13_fu_2174_p4;
wire   [7:0] p_Result_14_fu_2184_p4;
wire   [8:0] tmp_92_fu_2292_p1;
wire   [8:0] tmp_93_fu_2296_p1;
wire   [8:0] p_0108_i_i_fu_2202_p2;
wire   [8:0] p_0100_i_i_fu_2216_p2;
wire   [9:0] lhs_V_fu_2306_p1;
wire   [9:0] rhs_V_fu_2310_p1;
wire   [8:0] p_092_i_i_fu_2230_p2;
wire   [8:0] p_084_i_i_fu_2244_p2;
wire   [9:0] lhs_V_3_fu_2320_p1;
wire   [9:0] rhs_V_3_fu_2324_p1;
wire   [8:0] p_076_i_i_fu_2258_p2;
wire   [8:0] p_068_i_i_fu_2272_p2;
wire   [9:0] lhs_V_4_fu_2334_p1;
wire   [9:0] rhs_V_4_fu_2338_p1;
wire   [8:0] p_060_i_i_fu_2286_p2;
wire   [8:0] p_052_i_i_fu_2300_p2;
wire   [9:0] lhs_V_5_fu_2348_p1;
wire   [9:0] rhs_V_5_fu_2352_p1;
wire   [9:0] ret_V_3_fu_2314_p2;
wire   [9:0] ret_V_4_fu_2328_p2;
wire   [10:0] lhs_V_6_fu_2362_p1;
wire   [10:0] rhs_V_6_fu_2366_p1;
wire   [9:0] ret_V_fu_2342_p2;
wire   [9:0] ret_V_5_fu_2356_p2;
wire   [10:0] lhs_V_7_fu_2376_p1;
wire   [10:0] rhs_V_7_fu_2380_p1;
wire   [10:0] ret_V_6_fu_2370_p2;
wire   [10:0] ret_V_7_fu_2384_p2;
wire   [11:0] lhs_V_8_fu_2390_p1;
wire   [11:0] rhs_V_8_fu_2394_p1;
wire   [9:0] bound_fu_2417_p0;
wire   [15:0] bound_fu_2417_p1;
wire  signed [12:0] tmp_95_fu_2423_p0;
wire   [4:0] tmp_95_fu_2423_p1;
wire   [4:0] grp_fu_2429_p1;
wire  signed [12:0] tmp_16989_1_fu_2436_p0;
wire   [4:0] tmp_16989_1_fu_2436_p1;
wire   [4:0] grp_fu_2442_p1;
wire  signed [12:0] tmp_16989_2_fu_2449_p0;
wire   [4:0] tmp_16989_2_fu_2449_p1;
wire   [4:0] grp_fu_2455_p1;
wire  signed [12:0] tmp_16989_3_fu_2462_p0;
wire   [4:0] tmp_16989_3_fu_2462_p1;
wire   [4:0] grp_fu_2468_p1;
wire  signed [12:0] tmp_16989_4_fu_2475_p0;
wire   [4:0] tmp_16989_4_fu_2475_p1;
wire   [4:0] grp_fu_2481_p1;
wire  signed [12:0] tmp_16989_5_fu_2488_p0;
wire   [4:0] tmp_16989_5_fu_2488_p1;
wire   [4:0] grp_fu_2494_p1;
wire  signed [12:0] tmp_16989_6_fu_2501_p0;
wire   [4:0] tmp_16989_6_fu_2501_p1;
wire   [4:0] grp_fu_2507_p1;
wire  signed [12:0] tmp_16989_7_fu_2514_p0;
wire   [4:0] tmp_16989_7_fu_2514_p1;
wire   [4:0] grp_fu_2520_p1;
wire   [12:0] tmp_73_fu_2527_p1;
wire   [12:0] tmp3_fu_2531_p1;
wire   [12:0] tmp3_1_fu_2535_p1;
wire   [12:0] tmp3_2_fu_2539_p1;
wire   [12:0] tmp3_3_fu_2543_p1;
wire   [12:0] tmp3_4_fu_2547_p1;
wire   [12:0] tmp3_5_fu_2551_p1;
wire   [12:0] tmp3_6_fu_2555_p1;
wire   [12:0] tmp3_7_fu_2559_p1;
reg    grp_fu_742_ap_start;
wire    grp_fu_742_ap_done;
reg    grp_fu_1301_ap_start;
wire    grp_fu_1301_ap_done;
reg    grp_fu_1310_ap_start;
wire    grp_fu_1310_ap_done;
reg   [15:0] ap_return_preg;
wire    ap_CS_fsm_state69;
reg   [64:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [25:0] bound_fu_2417_p00;
wire   [25:0] bound_fu_2417_p10;
wire   [17:0] grp_fu_742_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 65'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_return_preg = 16'd0;
end

cnna_sdiv_18s_6ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
cnna_sdiv_18s_6ns_16_22_seq_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_742_ap_start),
    .done(grp_fu_742_ap_done),
    .din0(grp_fu_742_p0),
    .din1(grp_fu_742_p1),
    .ce(1'b1),
    .dout(grp_fu_742_p2)
);

cnna_sdiv_16ns_9ns_16_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
cnna_sdiv_16ns_9ns_16_20_seq_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1301_ap_start),
    .done(grp_fu_1301_ap_done),
    .din0(grp_fu_1301_p0),
    .din1(grp_fu_1301_p1),
    .ce(1'b1),
    .dout(grp_fu_1301_p2)
);

cnna_srem_16ns_9ns_11_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
cnna_srem_16ns_9ns_11_20_seq_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1310_ap_start),
    .done(grp_fu_1310_ap_done),
    .din0(w_reg_2804),
    .din1(grp_fu_1310_p1),
    .ce(1'b1),
    .dout(grp_fu_1310_p2)
);

cnna_mul_mul_10ns_16ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
cnna_mul_mul_10ns_16ns_26_1_1_U70(
    .din0(bound_fu_2417_p0),
    .din1(bound_fu_2417_p1),
    .dout(bound_fu_2417_p2)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U71(
    .din0(tmp_95_fu_2423_p0),
    .din1(tmp_95_fu_2423_p1),
    .dout(tmp_95_fu_2423_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U72(
    .din0(id_tmp_s_fu_1458_p3),
    .din1(grp_fu_2429_p1),
    .din2(p_s_fu_1477_p2),
    .dout(grp_fu_2429_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U73(
    .din0(tmp_16989_1_fu_2436_p0),
    .din1(tmp_16989_1_fu_2436_p1),
    .dout(tmp_16989_1_fu_2436_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U74(
    .din0(id_tmp_1_fu_1513_p3),
    .din1(grp_fu_2442_p1),
    .din2(i_op_assign_8_1_fu_1537_p2),
    .dout(grp_fu_2442_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U75(
    .din0(tmp_16989_2_fu_2449_p0),
    .din1(tmp_16989_2_fu_2449_p1),
    .dout(tmp_16989_2_fu_2449_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U76(
    .din0(id_tmp_2_fu_1573_p3),
    .din1(grp_fu_2455_p1),
    .din2(i_op_assign_8_2_fu_1597_p2),
    .dout(grp_fu_2455_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U77(
    .din0(tmp_16989_3_fu_2462_p0),
    .din1(tmp_16989_3_fu_2462_p1),
    .dout(tmp_16989_3_fu_2462_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U78(
    .din0(id_tmp_3_fu_1633_p3),
    .din1(grp_fu_2468_p1),
    .din2(i_op_assign_8_3_fu_1657_p2),
    .dout(grp_fu_2468_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U79(
    .din0(tmp_16989_4_fu_2475_p0),
    .din1(tmp_16989_4_fu_2475_p1),
    .dout(tmp_16989_4_fu_2475_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U80(
    .din0(id_tmp_4_fu_1693_p3),
    .din1(grp_fu_2481_p1),
    .din2(i_op_assign_8_4_fu_1717_p2),
    .dout(grp_fu_2481_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U81(
    .din0(tmp_16989_5_fu_2488_p0),
    .din1(tmp_16989_5_fu_2488_p1),
    .dout(tmp_16989_5_fu_2488_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U82(
    .din0(id_tmp_5_fu_1753_p3),
    .din1(grp_fu_2494_p1),
    .din2(i_op_assign_8_5_fu_1777_p2),
    .dout(grp_fu_2494_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U83(
    .din0(tmp_16989_6_fu_2501_p0),
    .din1(tmp_16989_6_fu_2501_p1),
    .dout(tmp_16989_6_fu_2501_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U84(
    .din0(id_tmp_6_fu_1813_p3),
    .din1(grp_fu_2507_p1),
    .din2(i_op_assign_8_6_fu_1837_p2),
    .dout(grp_fu_2507_p3)
);

cnna_mul_mul_13s_5ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
cnna_mul_mul_13s_5ns_13_1_1_U85(
    .din0(tmp_16989_7_fu_2514_p0),
    .din1(tmp_16989_7_fu_2514_p1),
    .dout(tmp_16989_7_fu_2514_p2)
);

cnna_mac_muladd_16s_5ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
cnna_mac_muladd_16s_5ns_16ns_16_1_1_U86(
    .din0(id_tmp_7_fu_1873_p3),
    .din1(grp_fu_2520_p1),
    .din2(i_op_assign_8_7_fu_1897_p2),
    .dout(grp_fu_2520_p3)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U87(
    .din0(wIndex_reg_2824),
    .din1(tmp_73_fu_2527_p1),
    .dout(tmp_73_fu_2527_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U88(
    .din0(tmp1_reg_2833),
    .din1(tmp3_fu_2531_p1),
    .dout(tmp3_fu_2531_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U89(
    .din0(tmp_1_reg_2842),
    .din1(tmp3_1_fu_2535_p1),
    .dout(tmp3_1_fu_2535_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U90(
    .din0(tmp_2_reg_2851),
    .din1(tmp3_2_fu_2539_p1),
    .dout(tmp3_2_fu_2539_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U91(
    .din0(tmp_3_reg_2860),
    .din1(tmp3_3_fu_2543_p1),
    .dout(tmp3_3_fu_2543_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U92(
    .din0(tmp_4_reg_2869),
    .din1(tmp3_4_fu_2547_p1),
    .dout(tmp3_4_fu_2547_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U93(
    .din0(tmp_5_reg_2878),
    .din1(tmp3_5_fu_2551_p1),
    .dout(tmp3_5_fu_2551_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U94(
    .din0(tmp_6_reg_2887),
    .din1(tmp3_6_fu_2555_p1),
    .dout(tmp3_6_fu_2555_p2)
);

cnna_mul_mul_16s_13ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
cnna_mul_mul_16s_13ns_16_1_1_U95(
    .din0(tmp_7_reg_2896),
    .din1(tmp3_7_fu_2559_p1),
    .dout(tmp3_7_fu_2559_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state63) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state62)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state63)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state63);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state62)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_preg <= sbufIndex_write_assi_reg_693;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1223_p2 == 1'd0) & (ult_reg_2626 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        id_reg_672 <= p_mid2_cast_fu_1260_p1;
    end else if (((ult_reg_2626 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        id_reg_672 <= grp_fu_1301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        indvar_flatten_reg_639 <= indvar_flatten_next_reg_2784;
    end else if (((or_cond_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        indvar_flatten_reg_639 <= 26'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        sbufIndex_write_assi_reg_693 <= hIndexPre1;
    end else if (((or_cond_fu_959_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        sbufIndex_write_assi_reg_693 <= sbufIndex_read_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_1927_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_reg_682 <= cig_V_fu_1932_p2;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        t_V_reg_682 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        woc_reg_661 <= woc_1_fu_2412_p2;
    end else if (((or_cond_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        woc_reg_661 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        wog_reg_650 <= p_mid2_reg_2794;
    end else if (((or_cond_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        wog_reg_650 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        bound_reg_2776 <= bound_fu_2417_p2;
        tmp_167_1_reg_2711 <= tmp_167_1_fu_997_p2;
        tmp_167_2_reg_2716 <= tmp_167_2_fu_1028_p2;
        tmp_167_3_reg_2726 <= tmp_167_3_fu_1073_p2;
        tmp_167_4_reg_2736 <= tmp_167_4_fu_1093_p2;
        tmp_167_5_reg_2746 <= tmp_167_5_fu_1119_p2;
        tmp_167_6_reg_2756 <= tmp_167_6_fu_1149_p2;
        tmp_167_7_reg_2766 <= tmp_167_7_fu_1173_p2;
        tmp_170_2_reg_2721[5 : 1] <= tmp_170_2_fu_1034_p1[5 : 1];
        tmp_170_3_reg_2731[8 : 0] <= tmp_170_3_fu_1079_p1[8 : 0];
        tmp_170_4_reg_2741[6 : 2] <= tmp_170_4_fu_1099_p1[6 : 2];
        tmp_170_5_reg_2751[7 : 0] <= tmp_170_5_fu_1125_p1[7 : 0];
        tmp_170_6_reg_2761[8 : 1] <= tmp_170_6_fu_1155_p1[8 : 1];
        tmp_170_7_reg_2771[8 : 0] <= tmp_170_7_fu_1179_p1[8 : 0];
        tmp_67_reg_2681[12 : 0] <= tmp_67_fu_965_p1[12 : 0];
        tmp_68_reg_2694 <= tmp_68_fu_969_p2;
        tmp_69_reg_2699[4 : 0] <= tmp_69_fu_975_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten_next_reg_2784 <= indvar_flatten_next_fu_1228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        or_cond1_reg_2838 <= or_cond1_fu_1501_p2;
        or_cond3_reg_2847 <= or_cond3_fu_1561_p2;
        or_cond4_reg_2856 <= or_cond4_fu_1621_p2;
        or_cond5_reg_2865 <= or_cond5_fu_1681_p2;
        or_cond6_reg_2874 <= or_cond6_fu_1741_p2;
        or_cond7_reg_2883 <= or_cond7_fu_1801_p2;
        or_cond8_reg_2892 <= or_cond8_fu_1861_p2;
        or_cond9_reg_2901 <= or_cond9_fu_1921_p2;
        tmp1_reg_2833 <= grp_fu_2429_p3;
        tmp_1_reg_2842 <= grp_fu_2442_p3;
        tmp_2_reg_2851 <= grp_fu_2455_p3;
        tmp_3_reg_2860 <= grp_fu_2468_p3;
        tmp_4_reg_2869 <= grp_fu_2481_p3;
        tmp_5_reg_2878 <= grp_fu_2494_p3;
        tmp_6_reg_2887 <= grp_fu_2507_p3;
        tmp_7_reg_2896 <= grp_fu_2520_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        or_cond2_reg_2829 <= or_cond2_fu_1333_p2;
        wIndex_reg_2824 <= wIndex_fu_1306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        p_mid2_reg_2794 <= p_mid2_fu_1252_p3;
        w_reg_2804 <= w_fu_1295_p2;
        woc_mid2_reg_2789 <= woc_mid2_fu_1244_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        p_shl_cast2_reg_2647[7 : 3] <= p_shl_cast2_fu_886_p1[7 : 3];
        splitEn_reg_2632 <= splitEn_fu_767_p2;
        tmp_47_reg_2637[4 : 0] <= tmp_47_fu_857_p1[4 : 0];
        tmp_50_reg_2642[4 : 0] <= tmp_50_fu_876_p1[4 : 0];
        tmp_52_reg_2653[4 : 0] <= tmp_52_fu_904_p1[4 : 0];
        ult_reg_2626 <= ult_fu_761_p2;
        woConsume_reg_2673 <= woConsume_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ret_V_s_reg_2596[5 : 1] <= ret_V_s_fu_702_p3[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_reg_2838 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_0_V_addr_reg_2969 <= tmp_109_fu_1957_p1;
        tmp_109_reg_2964 <= tmp_109_fu_1957_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_0_V_addr_reg_2969_pp0_iter1_reg <= sbuf_0_V_addr_reg_2969;
        sbuf_1_V_addr_reg_2985_pp0_iter1_reg <= sbuf_1_V_addr_reg_2985;
        sbuf_2_V_addr_reg_3001_pp0_iter1_reg <= sbuf_2_V_addr_reg_3001;
        sbuf_3_V_addr_reg_3017_pp0_iter1_reg <= sbuf_3_V_addr_reg_3017;
        sbuf_4_V_addr_reg_3033_pp0_iter1_reg <= sbuf_4_V_addr_reg_3033;
        sbuf_5_V_addr_reg_3049_pp0_iter1_reg <= sbuf_5_V_addr_reg_3049;
        sbuf_6_V_addr_reg_3065_pp0_iter1_reg <= sbuf_6_V_addr_reg_3065;
        sbuf_7_V_addr_reg_3081_pp0_iter1_reg <= sbuf_7_V_addr_reg_3081;
        tmp_109_reg_2964_pp0_iter1_reg <= tmp_109_reg_2964;
        tmp_181_1_reg_2980_pp0_iter1_reg <= tmp_181_1_reg_2980;
        tmp_181_2_reg_2996_pp0_iter1_reg <= tmp_181_2_reg_2996;
        tmp_181_3_reg_3012_pp0_iter1_reg <= tmp_181_3_reg_3012;
        tmp_181_4_reg_3028_pp0_iter1_reg <= tmp_181_4_reg_3028;
        tmp_181_5_reg_3044_pp0_iter1_reg <= tmp_181_5_reg_3044;
        tmp_181_6_reg_3060_pp0_iter1_reg <= tmp_181_6_reg_3060;
        tmp_181_7_reg_3076_pp0_iter1_reg <= tmp_181_7_reg_3076;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        sbuf_0_V_addr_reg_2969_pp0_iter2_reg <= sbuf_0_V_addr_reg_2969_pp0_iter1_reg;
        sbuf_1_V_addr_reg_2985_pp0_iter2_reg <= sbuf_1_V_addr_reg_2985_pp0_iter1_reg;
        sbuf_2_V_addr_reg_3001_pp0_iter2_reg <= sbuf_2_V_addr_reg_3001_pp0_iter1_reg;
        sbuf_3_V_addr_reg_3017_pp0_iter2_reg <= sbuf_3_V_addr_reg_3017_pp0_iter1_reg;
        sbuf_4_V_addr_reg_3033_pp0_iter2_reg <= sbuf_4_V_addr_reg_3033_pp0_iter1_reg;
        sbuf_5_V_addr_reg_3049_pp0_iter2_reg <= sbuf_5_V_addr_reg_3049_pp0_iter1_reg;
        sbuf_6_V_addr_reg_3065_pp0_iter2_reg <= sbuf_6_V_addr_reg_3065_pp0_iter1_reg;
        sbuf_7_V_addr_reg_3081_pp0_iter2_reg <= sbuf_7_V_addr_reg_3081_pp0_iter1_reg;
        tmp_109_reg_2964_pp0_iter2_reg <= tmp_109_reg_2964_pp0_iter1_reg;
        tmp_181_1_reg_2980_pp0_iter2_reg <= tmp_181_1_reg_2980_pp0_iter1_reg;
        tmp_181_2_reg_2996_pp0_iter2_reg <= tmp_181_2_reg_2996_pp0_iter1_reg;
        tmp_181_3_reg_3012_pp0_iter2_reg <= tmp_181_3_reg_3012_pp0_iter1_reg;
        tmp_181_4_reg_3028_pp0_iter2_reg <= tmp_181_4_reg_3028_pp0_iter1_reg;
        tmp_181_5_reg_3044_pp0_iter2_reg <= tmp_181_5_reg_3044_pp0_iter1_reg;
        tmp_181_6_reg_3060_pp0_iter2_reg <= tmp_181_6_reg_3060_pp0_iter1_reg;
        tmp_181_7_reg_3076_pp0_iter2_reg <= tmp_181_7_reg_3076_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_2847 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_1_V_addr_reg_2985 <= tmp_181_1_fu_1968_p1;
        tmp_181_1_reg_2980 <= tmp_181_1_fu_1968_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond4_reg_2856 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_2_V_addr_reg_3001 <= tmp_181_2_fu_1979_p1;
        tmp_181_2_reg_2996 <= tmp_181_2_fu_1979_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond5_reg_2865 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_3_V_addr_reg_3017 <= tmp_181_3_fu_1990_p1;
        tmp_181_3_reg_3012 <= tmp_181_3_fu_1990_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond6_reg_2874 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_4_V_addr_reg_3033 <= tmp_181_4_fu_2001_p1;
        tmp_181_4_reg_3028 <= tmp_181_4_fu_2001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond7_reg_2883 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_5_V_addr_reg_3049 <= tmp_181_5_fu_2012_p1;
        tmp_181_5_reg_3044 <= tmp_181_5_fu_2012_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond8_reg_2892 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_6_V_addr_reg_3065 <= tmp_181_6_fu_2023_p1;
        tmp_181_6_reg_3060 <= tmp_181_6_fu_2023_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond9_reg_2901 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_7_V_addr_reg_3081 <= tmp_181_7_fu_2034_p1;
        tmp_181_7_reg_3076 <= tmp_181_7_fu_2034_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        tmp3_1_reg_2915 <= tmp3_1_fu_2535_p2;
        tmp3_2_reg_2920 <= tmp3_2_fu_2539_p2;
        tmp3_3_reg_2925 <= tmp3_3_fu_2543_p2;
        tmp3_4_reg_2930 <= tmp3_4_fu_2547_p2;
        tmp3_5_reg_2935 <= tmp3_5_fu_2551_p2;
        tmp3_6_reg_2940 <= tmp3_6_fu_2555_p2;
        tmp3_7_reg_2945 <= tmp3_7_fu_2559_p2;
        tmp3_reg_2910 <= tmp3_fu_2531_p2;
        tmp_73_reg_2905 <= tmp_73_fu_2527_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_1927_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state63 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state63 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return = sbufIndex_write_assi_reg_693;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_1223_p2 == 1'd0) & (ult_reg_2626 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_1301_ap_start = 1'b1;
    end else begin
        grp_fu_1301_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1310_ap_start = 1'b1;
    end else begin
        grp_fu_1310_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_742_ap_start = 1'b1;
    end else begin
        grp_fu_742_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ibuf_V_ce0 = 1'b1;
    end else begin
        ibuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_0_V_ce0 = 1'b1;
    end else begin
        qibuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_0_V_ce1 = 1'b1;
    end else begin
        qibuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_reg_2838 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_0_V_we0 = 1'b1;
    end else begin
        qibuf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_reg_2838 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_0_V_we1 = 1'b1;
    end else begin
        qibuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_1_V_ce0 = 1'b1;
    end else begin
        qibuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_1_V_ce1 = 1'b1;
    end else begin
        qibuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_2847 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_1_V_we0 = 1'b1;
    end else begin
        qibuf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_2847 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_1_V_we1 = 1'b1;
    end else begin
        qibuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_2_V_ce0 = 1'b1;
    end else begin
        qibuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_2_V_ce1 = 1'b1;
    end else begin
        qibuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond4_reg_2856 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_2_V_we0 = 1'b1;
    end else begin
        qibuf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond4_reg_2856 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_2_V_we1 = 1'b1;
    end else begin
        qibuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_3_V_ce0 = 1'b1;
    end else begin
        qibuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_3_V_ce1 = 1'b1;
    end else begin
        qibuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond5_reg_2865 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_3_V_we0 = 1'b1;
    end else begin
        qibuf_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond5_reg_2865 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_3_V_we1 = 1'b1;
    end else begin
        qibuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_4_V_ce0 = 1'b1;
    end else begin
        qibuf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_4_V_ce1 = 1'b1;
    end else begin
        qibuf_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond6_reg_2874 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_4_V_we0 = 1'b1;
    end else begin
        qibuf_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond6_reg_2874 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_4_V_we1 = 1'b1;
    end else begin
        qibuf_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_5_V_ce0 = 1'b1;
    end else begin
        qibuf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_5_V_ce1 = 1'b1;
    end else begin
        qibuf_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond7_reg_2883 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_5_V_we0 = 1'b1;
    end else begin
        qibuf_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond7_reg_2883 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_5_V_we1 = 1'b1;
    end else begin
        qibuf_5_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_6_V_ce0 = 1'b1;
    end else begin
        qibuf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_6_V_ce1 = 1'b1;
    end else begin
        qibuf_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond8_reg_2892 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_6_V_we0 = 1'b1;
    end else begin
        qibuf_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond8_reg_2892 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_6_V_we1 = 1'b1;
    end else begin
        qibuf_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        qibuf_7_V_ce0 = 1'b1;
    end else begin
        qibuf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        qibuf_7_V_ce1 = 1'b1;
    end else begin
        qibuf_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond9_reg_2901 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qibuf_7_V_we0 = 1'b1;
    end else begin
        qibuf_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond9_reg_2901 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        qibuf_7_V_we1 = 1'b1;
    end else begin
        qibuf_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_0_V_ce0 = 1'b1;
    end else begin
        sbuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_0_V_ce1 = 1'b1;
    end else begin
        sbuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_reg_2838 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_0_V_we0 = 1'b1;
    end else begin
        sbuf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_reg_2838 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_0_V_we1 = 1'b1;
    end else begin
        sbuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_1_V_ce0 = 1'b1;
    end else begin
        sbuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_1_V_ce1 = 1'b1;
    end else begin
        sbuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_2847 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_1_V_we0 = 1'b1;
    end else begin
        sbuf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_2847 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_1_V_we1 = 1'b1;
    end else begin
        sbuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_2_V_ce0 = 1'b1;
    end else begin
        sbuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_2_V_ce1 = 1'b1;
    end else begin
        sbuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond4_reg_2856 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_2_V_we0 = 1'b1;
    end else begin
        sbuf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond4_reg_2856 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_2_V_we1 = 1'b1;
    end else begin
        sbuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_3_V_ce0 = 1'b1;
    end else begin
        sbuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_3_V_ce1 = 1'b1;
    end else begin
        sbuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond5_reg_2865 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_3_V_we0 = 1'b1;
    end else begin
        sbuf_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond5_reg_2865 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_3_V_we1 = 1'b1;
    end else begin
        sbuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_4_V_ce0 = 1'b1;
    end else begin
        sbuf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_4_V_ce1 = 1'b1;
    end else begin
        sbuf_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond6_reg_2874 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_4_V_we0 = 1'b1;
    end else begin
        sbuf_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond6_reg_2874 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_4_V_we1 = 1'b1;
    end else begin
        sbuf_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_5_V_ce0 = 1'b1;
    end else begin
        sbuf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_5_V_ce1 = 1'b1;
    end else begin
        sbuf_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond7_reg_2883 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_5_V_we0 = 1'b1;
    end else begin
        sbuf_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond7_reg_2883 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_5_V_we1 = 1'b1;
    end else begin
        sbuf_5_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_6_V_ce0 = 1'b1;
    end else begin
        sbuf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_6_V_ce1 = 1'b1;
    end else begin
        sbuf_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond8_reg_2892 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_6_V_we0 = 1'b1;
    end else begin
        sbuf_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond8_reg_2892 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_6_V_we1 = 1'b1;
    end else begin
        sbuf_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sbuf_7_V_ce0 = 1'b1;
    end else begin
        sbuf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        sbuf_7_V_ce1 = 1'b1;
    end else begin
        sbuf_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond9_reg_2901 == 1'd1) & (exitcond_fu_1927_p2 == 1'd0) & (or_cond2_reg_2829 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sbuf_7_V_we0 = 1'b1;
    end else begin
        sbuf_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond9_reg_2901 == 1'd1) & (or_cond2_reg_2829 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        sbuf_7_V_we1 = 1'b1;
    end else begin
        sbuf_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((or_cond_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond_flatten_fu_1223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else if (((exitcond_flatten_fu_1223_p2 == 1'd0) & (ult_reg_2626 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_1927_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_1927_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd64];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_2417_p0 = bound_fu_2417_p00;

assign bound_fu_2417_p00 = woConsume_fu_919_p3;

assign bound_fu_2417_p1 = bound_fu_2417_p10;

assign bound_fu_2417_p10 = woGroup_fu_868_p3;

assign brmerge1_fu_1452_p2 = (tmp4_fu_1447_p2 | rev2_fu_1358_p2);

assign brmerge2_fu_1507_p2 = (tmp4_fu_1447_p2 | rev3_fu_1369_p2);

assign brmerge3_fu_1567_p2 = (tmp4_fu_1447_p2 | rev4_fu_1380_p2);

assign brmerge4_fu_1627_p2 = (tmp4_fu_1447_p2 | rev5_fu_1391_p2);

assign brmerge5_fu_1687_p2 = (tmp4_fu_1447_p2 | rev6_fu_1402_p2);

assign brmerge6_fu_1747_p2 = (tmp4_fu_1447_p2 | rev7_fu_1413_p2);

assign brmerge7_fu_1807_p2 = (tmp4_fu_1447_p2 | rev8_fu_1424_p2);

assign brmerge8_fu_1867_p2 = (tmp4_fu_1447_p2 | rev9_fu_1435_p2);

assign cig_V_fu_1932_p2 = (t_V_reg_682 + 13'd1);

assign exitcond_flatten_fu_1223_p2 = ((indvar_flatten_reg_639 == bound_reg_2776) ? 1'b1 : 1'b0);

assign exitcond_fu_1927_p2 = ((t_V_reg_682 == cnn_iPara_ciGroup_V_read) ? 1'b1 : 1'b0);

assign grp_fu_1301_p0 = (woc_cast1_fu_1291_p1 + tmp_58_mid2_fu_1283_p3);

assign grp_fu_1301_p1 = p_shl_cast2_reg_2647;

assign grp_fu_1310_p1 = p_shl_cast2_reg_2647;

assign grp_fu_2429_p1 = tmp_52_reg_2653;

assign grp_fu_2442_p1 = tmp_52_reg_2653;

assign grp_fu_2455_p1 = tmp_52_reg_2653;

assign grp_fu_2468_p1 = tmp_52_reg_2653;

assign grp_fu_2481_p1 = tmp_52_reg_2653;

assign grp_fu_2494_p1 = tmp_52_reg_2653;

assign grp_fu_2507_p1 = tmp_52_reg_2653;

assign grp_fu_2520_p1 = tmp_52_reg_2653;

assign grp_fu_742_p0 = $signed(ret_V_2_fu_728_p2);

assign grp_fu_742_p1 = grp_fu_742_p10;

assign grp_fu_742_p10 = cnn_cnvPara_stride_w_V_read;

assign i_op_assign_8_1_fu_1537_p2 = (p_1_fu_1532_p2 - tmp_50_reg_2642);

assign i_op_assign_8_2_fu_1597_p2 = (p_2_fu_1592_p2 - tmp_170_2_reg_2721);

assign i_op_assign_8_3_fu_1657_p2 = (p_3_fu_1652_p2 - tmp_170_3_reg_2731);

assign i_op_assign_8_4_fu_1717_p2 = (p_4_fu_1712_p2 - tmp_170_4_reg_2741);

assign i_op_assign_8_5_fu_1777_p2 = (p_5_fu_1772_p2 - tmp_170_5_reg_2751);

assign i_op_assign_8_6_fu_1837_p2 = (p_6_fu_1832_p2 - tmp_170_6_reg_2761);

assign i_op_assign_8_7_fu_1897_p2 = (p_7_fu_1892_p2 - tmp_170_7_reg_2771);

assign ibufAddr_fu_1942_p2 = ($signed(tmp_76_fu_1938_p1) + $signed(tmp_73_reg_2905));

assign ibuf_V_address0 = tmp_77_fu_1947_p1;

assign id_tmp_1_fu_1513_p3 = ((brmerge2_fu_1507_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_2_fu_1573_p3 = ((brmerge3_fu_1567_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_3_fu_1633_p3 = ((brmerge4_fu_1627_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_4_fu_1693_p3 = ((brmerge5_fu_1687_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_5_fu_1753_p3 = ((brmerge6_fu_1747_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_6_fu_1813_p3 = ((brmerge7_fu_1807_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_7_fu_1873_p3 = ((brmerge8_fu_1867_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign id_tmp_s_fu_1458_p3 = ((brmerge1_fu_1452_p2[0:0] === 1'b1) ? id_reg_672 : tmp_65_fu_1347_p2);

assign indvar_flatten_next_fu_1228_p2 = (26'd1 + indvar_flatten_reg_639);

assign lhs_V_22_1_cast_fu_978_p1 = cnn_cnvPara_stride_w_V_read;

assign lhs_V_22_2_cast_fu_1014_p1 = ret_V_25_2_fu_1003_p3;

assign lhs_V_22_3_fu_1059_p1 = $unsigned(ret_V_25_3_cast_fu_1055_p1);

assign lhs_V_22_6_fu_1135_p1 = ret_V_25_6_fu_1129_p2;

assign lhs_V_22_7_fu_1159_p1 = $unsigned(tmp_51_fu_894_p2);

assign lhs_V_3_fu_2320_p1 = p_092_i_i_fu_2230_p2;

assign lhs_V_4_fu_2334_p1 = p_076_i_i_fu_2258_p2;

assign lhs_V_5_fu_2348_p1 = p_060_i_i_fu_2286_p2;

assign lhs_V_6_fu_2362_p1 = ret_V_3_fu_2314_p2;

assign lhs_V_7_fu_2376_p1 = ret_V_fu_2342_p2;

assign lhs_V_8_fu_2390_p1 = ret_V_6_fu_2370_p2;

assign lhs_V_fu_2306_p1 = p_0108_i_i_fu_2202_p2;

assign mt_fu_1199_p3 = {{tmp_1548_fu_1195_p1}, {3'd0}};

assign mt_mid1_fu_1268_p3 = {{tmp_1549_fu_1264_p1}, {3'd0}};

assign or_cond1_fu_1501_p2 = (tmp_108_fu_1496_p2 & rev10_fu_1490_p2);

assign or_cond2_fu_1333_p2 = (tmp_74_fu_1328_p2 & rev1_fu_1322_p2);

assign or_cond3_fu_1561_p2 = (tmp_178_1_fu_1556_p2 & rev11_fu_1550_p2);

assign or_cond4_fu_1621_p2 = (tmp_178_2_fu_1616_p2 & rev12_fu_1610_p2);

assign or_cond5_fu_1681_p2 = (tmp_178_3_fu_1676_p2 & rev13_fu_1670_p2);

assign or_cond6_fu_1741_p2 = (tmp_178_4_fu_1736_p2 & rev14_fu_1730_p2);

assign or_cond7_fu_1801_p2 = (tmp_178_5_fu_1796_p2 & rev15_fu_1790_p2);

assign or_cond8_fu_1861_p2 = (tmp_178_6_fu_1856_p2 & rev16_fu_1850_p2);

assign or_cond9_fu_1921_p2 = (tmp_178_7_fu_1916_p2 & rev17_fu_1910_p2);

assign or_cond_fu_959_p2 = (tmp2_fu_953_p2 | rev_fu_941_p2);

assign p_0100_i_i_fu_2216_p2 = (tmp_80_fu_2208_p1 + tmp_81_fu_2212_p1);

assign p_0108_i_i_fu_2202_p2 = (tmp_78_fu_2194_p1 + tmp_79_fu_2198_p1);

assign p_052_i_i_fu_2300_p2 = (tmp_92_fu_2292_p1 + tmp_93_fu_2296_p1);

assign p_060_i_i_fu_2286_p2 = (tmp_90_fu_2278_p1 + tmp_91_fu_2282_p1);

assign p_068_i_i_fu_2272_p2 = (tmp_88_fu_2264_p1 + tmp_89_fu_2268_p1);

assign p_076_i_i_fu_2258_p2 = (tmp_86_fu_2250_p1 + tmp_87_fu_2254_p1);

assign p_084_i_i_fu_2244_p2 = (tmp_84_fu_2236_p1 + tmp_85_fu_2240_p1);

assign p_092_i_i_fu_2230_p2 = (tmp_82_fu_2222_p1 + tmp_83_fu_2226_p1);

assign p_1_fu_1532_p2 = (w_reg_2804 - tmp_169_1_fu_1525_p3);

assign p_2_fu_1592_p2 = (w_reg_2804 - tmp_169_2_fu_1585_p3);

assign p_3_fu_1652_p2 = (w_reg_2804 - tmp_169_3_fu_1645_p3);

assign p_4_fu_1712_p2 = (w_reg_2804 - tmp_169_4_fu_1705_p3);

assign p_5_fu_1772_p2 = (w_reg_2804 - tmp_169_5_fu_1765_p3);

assign p_6_fu_1832_p2 = (w_reg_2804 - tmp_169_6_fu_1825_p3);

assign p_7_fu_1892_p2 = (w_reg_2804 - tmp_169_7_fu_1885_p3);

assign p_Result_10_fu_2144_p4 = {{ibuf_V_q0[95:88]}};

assign p_Result_11_fu_2154_p4 = {{ibuf_V_q0[103:96]}};

assign p_Result_12_fu_2164_p4 = {{ibuf_V_q0[111:104]}};

assign p_Result_13_fu_2174_p4 = {{ibuf_V_q0[119:112]}};

assign p_Result_14_fu_2184_p4 = {{ibuf_V_q0[127:120]}};

assign p_Result_1_fu_2044_p4 = {{ibuf_V_q0[15:8]}};

assign p_Result_2_fu_2054_p4 = {{ibuf_V_q0[23:16]}};

assign p_Result_3_fu_2064_p4 = {{ibuf_V_q0[31:24]}};

assign p_Result_4_fu_2074_p4 = {{ibuf_V_q0[39:32]}};

assign p_Result_5_fu_2084_p4 = {{ibuf_V_q0[47:40]}};

assign p_Result_6_fu_2094_p4 = {{ibuf_V_q0[55:48]}};

assign p_Result_7_fu_2104_p4 = {{ibuf_V_q0[63:56]}};

assign p_Result_8_fu_2114_p4 = {{ibuf_V_q0[71:64]}};

assign p_Result_9_fu_2124_p4 = {{ibuf_V_q0[79:72]}};

assign p_Result_s_fu_2134_p4 = {{ibuf_V_q0[87:80]}};

assign p_mid2_cast_fu_1260_p1 = p_mid2_fu_1252_p3;

assign p_mid2_fu_1252_p3 = ((tmp_59_fu_1218_p2[0:0] === 1'b1) ? wog_reg_650 : wog_s_fu_1234_p2);

assign p_neg_fu_801_p2 = ($signed(17'd131065) - $signed(tmp_68_cast_fu_783_p1));

assign p_s_fu_1477_p2 = (w_reg_2804 - tmp_97_fu_1470_p3);

assign p_shl1_cast_fu_1045_p1 = p_shl1_fu_1038_p3;

assign p_shl1_fu_1038_p3 = {{cnn_cnvPara_stride_w_V_read}, {2'd0}};

assign p_shl_cast1_fu_882_p1 = ret_V_9_fu_751_p3;

assign p_shl_cast2_fu_886_p1 = ret_V_9_fu_751_p3;

assign p_shl_cast_fu_890_p1 = ret_V_9_fu_751_p3;

assign qibuf_0_V_address0 = tmp_109_fu_1957_p1;

assign qibuf_0_V_address1 = tmp_109_reg_2964_pp0_iter2_reg;

assign qibuf_0_V_d0 = 12'd0;

assign qibuf_0_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_1_V_address0 = tmp_181_1_fu_1968_p1;

assign qibuf_1_V_address1 = tmp_181_1_reg_2980_pp0_iter2_reg;

assign qibuf_1_V_d0 = 12'd0;

assign qibuf_1_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_2_V_address0 = tmp_181_2_fu_1979_p1;

assign qibuf_2_V_address1 = tmp_181_2_reg_2996_pp0_iter2_reg;

assign qibuf_2_V_d0 = 12'd0;

assign qibuf_2_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_3_V_address0 = tmp_181_3_fu_1990_p1;

assign qibuf_3_V_address1 = tmp_181_3_reg_3012_pp0_iter2_reg;

assign qibuf_3_V_d0 = 12'd0;

assign qibuf_3_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_4_V_address0 = tmp_181_4_fu_2001_p1;

assign qibuf_4_V_address1 = tmp_181_4_reg_3028_pp0_iter2_reg;

assign qibuf_4_V_d0 = 12'd0;

assign qibuf_4_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_5_V_address0 = tmp_181_5_fu_2012_p1;

assign qibuf_5_V_address1 = tmp_181_5_reg_3044_pp0_iter2_reg;

assign qibuf_5_V_d0 = 12'd0;

assign qibuf_5_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_6_V_address0 = tmp_181_6_fu_2023_p1;

assign qibuf_6_V_address1 = tmp_181_6_reg_3060_pp0_iter2_reg;

assign qibuf_6_V_d0 = 12'd0;

assign qibuf_6_V_d1 = ret_V_10_fu_2398_p2;

assign qibuf_7_V_address0 = tmp_181_7_fu_2034_p1;

assign qibuf_7_V_address1 = tmp_181_7_reg_3076_pp0_iter2_reg;

assign qibuf_7_V_d0 = 12'd0;

assign qibuf_7_V_d1 = ret_V_10_fu_2398_p2;

assign ret_V_10_fu_2398_p2 = (lhs_V_8_fu_2390_p1 + rhs_V_8_fu_2394_p1);

assign ret_V_1_fu_718_p2 = ($signed(ret_V_cast_fu_710_p1) + $signed(rhs_V_8_cast_fu_714_p1));

assign ret_V_25_2_cast_fu_1010_p1 = ret_V_25_2_fu_1003_p3;

assign ret_V_25_2_fu_1003_p3 = {{cnn_cnvPara_stride_w_V_read}, {1'd0}};

assign ret_V_25_3_cast_fu_1055_p1 = $signed(ret_V_25_3_fu_1049_p2);

assign ret_V_25_3_fu_1049_p2 = (p_shl1_cast_fu_1045_p1 - rhs_V_cast_fu_748_p1);

assign ret_V_25_5_fu_1103_p2 = (p_shl1_cast_fu_1045_p1 + rhs_V_cast_fu_748_p1);

assign ret_V_25_6_fu_1129_p2 = (p_shl_cast_fu_890_p1 - ret_V_25_2_cast_fu_1010_p1);

assign ret_V_26_1_fu_987_p2 = (lhs_V_22_1_cast_fu_978_p1 + rhs_V_18_1_cast_fu_984_p1);

assign ret_V_26_2_fu_1018_p2 = (lhs_V_22_2_cast_fu_1014_p1 + rhs_V_18_1_cast2_fu_981_p1);

assign ret_V_26_3_fu_1063_p2 = (lhs_V_22_3_fu_1059_p1 + tmp_52_cast1_fu_907_p1);

assign ret_V_26_4_fu_1083_p2 = (p_shl1_cast_fu_1045_p1 + tmp_cast_fu_758_p1);

assign ret_V_26_5_fu_1109_p2 = (ret_V_25_5_fu_1103_p2 + tmp_cast_fu_758_p1);

assign ret_V_26_6_fu_1139_p2 = (lhs_V_22_6_fu_1135_p1 + tmp_52_cast1_fu_907_p1);

assign ret_V_26_7_fu_1163_p2 = (lhs_V_22_7_fu_1159_p1 + tmp_52_cast1_fu_907_p1);

assign ret_V_2_fu_728_p2 = (ret_V_1_fu_718_p2 - rhs_V_9_cast_fu_724_p1);

assign ret_V_3_fu_2314_p2 = (lhs_V_fu_2306_p1 + rhs_V_fu_2310_p1);

assign ret_V_4_fu_2328_p2 = (lhs_V_3_fu_2320_p1 + rhs_V_3_fu_2324_p1);

assign ret_V_5_fu_2356_p2 = (lhs_V_5_fu_2348_p1 + rhs_V_5_fu_2352_p1);

assign ret_V_6_fu_2370_p2 = (lhs_V_6_fu_2362_p1 + rhs_V_6_fu_2366_p1);

assign ret_V_7_fu_2384_p2 = (lhs_V_7_fu_2376_p1 + rhs_V_7_fu_2380_p1);

assign ret_V_9_fu_751_p3 = {{cnn_cnvPara_stride_w_V_read}, {3'd0}};

assign ret_V_cast_fu_710_p1 = ret_V_s_fu_702_p3;

assign ret_V_fu_2342_p2 = (lhs_V_4_fu_2334_p1 + rhs_V_4_fu_2338_p1);

assign ret_V_s_fu_702_p3 = {{cnn_cnvPara_pad_w_V_read}, {1'd0}};

assign rev10_fu_1490_p2 = (tmp_1554_fu_1482_p3 ^ 1'd1);

assign rev11_fu_1550_p2 = (tmp_1556_fu_1542_p3 ^ 1'd1);

assign rev12_fu_1610_p2 = (tmp_1558_fu_1602_p3 ^ 1'd1);

assign rev13_fu_1670_p2 = (tmp_1560_fu_1662_p3 ^ 1'd1);

assign rev14_fu_1730_p2 = (tmp_1562_fu_1722_p3 ^ 1'd1);

assign rev15_fu_1790_p2 = (tmp_1564_fu_1782_p3 ^ 1'd1);

assign rev16_fu_1850_p2 = (tmp_1566_fu_1842_p3 ^ 1'd1);

assign rev17_fu_1910_p2 = (tmp_1568_fu_1902_p3 ^ 1'd1);

assign rev1_fu_1322_p2 = (tmp_1552_fu_1314_p3 ^ 1'd1);

assign rev2_fu_1358_p2 = (slt1_fu_1353_p2 ^ 1'd1);

assign rev3_fu_1369_p2 = (slt2_fu_1364_p2 ^ 1'd1);

assign rev4_fu_1380_p2 = (slt3_fu_1375_p2 ^ 1'd1);

assign rev5_fu_1391_p2 = (slt4_fu_1386_p2 ^ 1'd1);

assign rev6_fu_1402_p2 = (slt5_fu_1397_p2 ^ 1'd1);

assign rev7_fu_1413_p2 = (slt6_fu_1408_p2 ^ 1'd1);

assign rev8_fu_1424_p2 = (slt7_fu_1419_p2 ^ 1'd1);

assign rev9_fu_1435_p2 = (slt8_fu_1430_p2 ^ 1'd1);

assign rev_fu_941_p2 = (slt_fu_935_p2 ^ 1'd1);

assign rhs_V_18_1_cast2_fu_981_p1 = cnn_cnvPara_kernel_w_V_read;

assign rhs_V_18_1_cast_fu_984_p1 = cnn_cnvPara_kernel_w_V_read;

assign rhs_V_3_fu_2324_p1 = p_084_i_i_fu_2244_p2;

assign rhs_V_4_fu_2338_p1 = p_068_i_i_fu_2272_p2;

assign rhs_V_5_fu_2352_p1 = p_052_i_i_fu_2300_p2;

assign rhs_V_6_fu_2366_p1 = ret_V_4_fu_2328_p2;

assign rhs_V_7_fu_2380_p1 = ret_V_5_fu_2356_p2;

assign rhs_V_8_cast_fu_714_p0 = cnn_iPara_width_read;

assign rhs_V_8_cast_fu_714_p1 = rhs_V_8_cast_fu_714_p0;

assign rhs_V_8_fu_2394_p1 = ret_V_7_fu_2384_p2;

assign rhs_V_9_cast_fu_724_p1 = cnn_cnvPara_kernel_w_V_read;

assign rhs_V_cast_fu_748_p1 = cnn_cnvPara_stride_w_V_read;

assign rhs_V_fu_2310_p1 = p_0100_i_i_fu_2216_p2;

assign sbuf_0_V_address0 = tmp_109_fu_1957_p1;

assign sbuf_0_V_address1 = sbuf_0_V_addr_reg_2969_pp0_iter2_reg;

assign sbuf_0_V_d0 = 128'd0;

assign sbuf_0_V_d1 = ibuf_V_q0;

assign sbuf_1_V_address0 = tmp_181_1_fu_1968_p1;

assign sbuf_1_V_address1 = sbuf_1_V_addr_reg_2985_pp0_iter2_reg;

assign sbuf_1_V_d0 = 128'd0;

assign sbuf_1_V_d1 = ibuf_V_q0;

assign sbuf_2_V_address0 = tmp_181_2_fu_1979_p1;

assign sbuf_2_V_address1 = sbuf_2_V_addr_reg_3001_pp0_iter2_reg;

assign sbuf_2_V_d0 = 128'd0;

assign sbuf_2_V_d1 = ibuf_V_q0;

assign sbuf_3_V_address0 = tmp_181_3_fu_1990_p1;

assign sbuf_3_V_address1 = sbuf_3_V_addr_reg_3017_pp0_iter2_reg;

assign sbuf_3_V_d0 = 128'd0;

assign sbuf_3_V_d1 = ibuf_V_q0;

assign sbuf_4_V_address0 = tmp_181_4_fu_2001_p1;

assign sbuf_4_V_address1 = sbuf_4_V_addr_reg_3033_pp0_iter2_reg;

assign sbuf_4_V_d0 = 128'd0;

assign sbuf_4_V_d1 = ibuf_V_q0;

assign sbuf_5_V_address0 = tmp_181_5_fu_2012_p1;

assign sbuf_5_V_address1 = sbuf_5_V_addr_reg_3049_pp0_iter2_reg;

assign sbuf_5_V_d0 = 128'd0;

assign sbuf_5_V_d1 = ibuf_V_q0;

assign sbuf_6_V_address0 = tmp_181_6_fu_2023_p1;

assign sbuf_6_V_address1 = sbuf_6_V_addr_reg_3065_pp0_iter2_reg;

assign sbuf_6_V_d0 = 128'd0;

assign sbuf_6_V_d1 = ibuf_V_q0;

assign sbuf_7_V_address0 = tmp_181_7_fu_2034_p1;

assign sbuf_7_V_address1 = sbuf_7_V_addr_reg_3081_pp0_iter2_reg;

assign sbuf_7_V_d0 = 128'd0;

assign sbuf_7_V_d1 = ibuf_V_q0;

assign slt1_fu_1353_p2 = (($signed(tmp_1551_fu_1343_p1) < $signed(tmp_68_reg_2694)) ? 1'b1 : 1'b0);

assign slt2_fu_1364_p2 = (($signed(tmp_1551_fu_1343_p1) < $signed(tmp_167_1_reg_2711)) ? 1'b1 : 1'b0);

assign slt3_fu_1375_p2 = (($signed(tmp_1551_fu_1343_p1) < $signed(tmp_167_2_reg_2716)) ? 1'b1 : 1'b0);

assign slt4_fu_1386_p2 = (($signed(tmp_1550_fu_1339_p1) < $signed(tmp_167_3_reg_2726)) ? 1'b1 : 1'b0);

assign slt5_fu_1397_p2 = (($signed(tmp_1551_fu_1343_p1) < $signed(tmp_167_4_reg_2736)) ? 1'b1 : 1'b0);

assign slt6_fu_1408_p2 = (($signed(tmp_1551_fu_1343_p1) < $signed(tmp_167_5_reg_2746)) ? 1'b1 : 1'b0);

assign slt7_fu_1419_p2 = (($signed(tmp_1550_fu_1339_p1) < $signed(tmp_167_6_reg_2756)) ? 1'b1 : 1'b0);

assign slt8_fu_1430_p2 = (($signed(tmp_1550_fu_1339_p1) < $signed(tmp_167_7_reg_2766)) ? 1'b1 : 1'b0);

assign slt_fu_935_p2 = (($signed(hIndexPre1) < $signed(cnn_iPara_height_read)) ? 1'b1 : 1'b0);

assign splitEn_fu_767_p2 = (ult_fu_761_p2 ^ 1'd1);

assign tmp2_fu_953_p2 = (tmp_55_fu_947_p2 | tmp_1547_fu_927_p3);

assign tmp3_1_fu_2535_p1 = tmp_67_reg_2681;

assign tmp3_2_fu_2539_p1 = tmp_67_reg_2681;

assign tmp3_3_fu_2543_p1 = tmp_67_reg_2681;

assign tmp3_4_fu_2547_p1 = tmp_67_reg_2681;

assign tmp3_5_fu_2551_p1 = tmp_67_reg_2681;

assign tmp3_6_fu_2555_p1 = tmp_67_reg_2681;

assign tmp3_7_fu_2559_p1 = tmp_67_reg_2681;

assign tmp3_fu_2531_p1 = tmp_67_reg_2681;

assign tmp4_fu_1447_p2 = (tmp_64_not_fu_1441_p2 | splitEn_reg_2632);

assign tmp_106_fu_1952_p2 = ($signed(tmp_76_fu_1938_p1) + $signed(tmp3_reg_2910));

assign tmp_108_fu_1496_p2 = ((p_s_fu_1477_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_109_fu_1957_p1 = $signed(tmp_106_fu_1952_p2);

assign tmp_110_tr_fu_787_p2 = ($signed(17'd7) + $signed(tmp_68_cast_fu_783_p1));

assign tmp_1545_fu_773_p1 = grp_fu_742_p2[15:0];

assign tmp_1546_fu_793_p3 = tmp_110_tr_fu_787_p2[32'd16];

assign tmp_1547_fu_927_p3 = hIndexPre1[32'd15];

assign tmp_1548_fu_1195_p1 = wog_reg_650[12:0];

assign tmp_1549_fu_1264_p1 = wog_s_fu_1234_p2[12:0];

assign tmp_1550_fu_1339_p1 = grp_fu_1310_p2[10:0];

assign tmp_1551_fu_1343_p1 = grp_fu_1310_p2[8:0];

assign tmp_1552_fu_1314_p3 = wIndex_fu_1306_p2[32'd15];

assign tmp_1554_fu_1482_p3 = p_s_fu_1477_p2[32'd15];

assign tmp_1556_fu_1542_p3 = i_op_assign_8_1_fu_1537_p2[32'd15];

assign tmp_1558_fu_1602_p3 = i_op_assign_8_2_fu_1597_p2[32'd15];

assign tmp_1560_fu_1662_p3 = i_op_assign_8_3_fu_1657_p2[32'd15];

assign tmp_1562_fu_1722_p3 = i_op_assign_8_4_fu_1717_p2[32'd15];

assign tmp_1564_fu_1782_p3 = i_op_assign_8_5_fu_1777_p2[32'd15];

assign tmp_1566_fu_1842_p3 = i_op_assign_8_6_fu_1837_p2[32'd15];

assign tmp_1568_fu_1902_p3 = i_op_assign_8_7_fu_1897_p2[32'd15];

assign tmp_1569_fu_2040_p1 = ibuf_V_q0[7:0];

assign tmp_166_1_cast_fu_993_p1 = ret_V_26_1_fu_987_p2;

assign tmp_166_2_cast_fu_1024_p1 = ret_V_26_2_fu_1018_p2;

assign tmp_166_3_cast_fu_1069_p1 = ret_V_26_3_fu_1063_p2;

assign tmp_166_4_cast_fu_1089_p1 = ret_V_26_4_fu_1083_p2;

assign tmp_166_5_cast_fu_1115_p1 = ret_V_26_5_fu_1109_p2;

assign tmp_166_6_cast_fu_1145_p1 = ret_V_26_6_fu_1139_p2;

assign tmp_166_7_cast_fu_1169_p1 = ret_V_26_7_fu_1163_p2;

assign tmp_167_1_fu_997_p2 = (tmp_166_1_cast_fu_993_p1 - p_shl_cast_fu_890_p1);

assign tmp_167_2_fu_1028_p2 = (tmp_166_2_cast_fu_1024_p1 - p_shl_cast_fu_890_p1);

assign tmp_167_3_fu_1073_p2 = (tmp_166_3_cast_fu_1069_p1 - p_shl_cast1_fu_882_p1);

assign tmp_167_4_fu_1093_p2 = (tmp_166_4_cast_fu_1089_p1 - p_shl_cast_fu_890_p1);

assign tmp_167_5_fu_1119_p2 = (tmp_166_5_cast_fu_1115_p1 - p_shl_cast_fu_890_p1);

assign tmp_167_6_fu_1149_p2 = (tmp_166_6_cast_fu_1145_p1 - p_shl_cast1_fu_882_p1);

assign tmp_167_7_fu_1173_p2 = (tmp_166_7_cast_fu_1169_p1 - p_shl_cast1_fu_882_p1);

assign tmp_16989_1_fu_2436_p0 = id_tmp_1_fu_1513_p3[12:0];

assign tmp_16989_1_fu_2436_p1 = tmp_69_reg_2699;

assign tmp_16989_2_fu_2449_p0 = id_tmp_2_fu_1573_p3[12:0];

assign tmp_16989_2_fu_2449_p1 = tmp_69_reg_2699;

assign tmp_16989_3_fu_2462_p0 = id_tmp_3_fu_1633_p3[12:0];

assign tmp_16989_3_fu_2462_p1 = tmp_69_reg_2699;

assign tmp_16989_4_fu_2475_p0 = id_tmp_4_fu_1693_p3[12:0];

assign tmp_16989_4_fu_2475_p1 = tmp_69_reg_2699;

assign tmp_16989_5_fu_2488_p0 = id_tmp_5_fu_1753_p3[12:0];

assign tmp_16989_5_fu_2488_p1 = tmp_69_reg_2699;

assign tmp_16989_6_fu_2501_p0 = id_tmp_6_fu_1813_p3[12:0];

assign tmp_16989_6_fu_2501_p1 = tmp_69_reg_2699;

assign tmp_16989_7_fu_2514_p0 = id_tmp_7_fu_1873_p3[12:0];

assign tmp_16989_7_fu_2514_p1 = tmp_69_reg_2699;

assign tmp_169_1_fu_1525_p3 = {{tmp_16989_1_fu_2436_p2}, {3'd0}};

assign tmp_169_2_fu_1585_p3 = {{tmp_16989_2_fu_2449_p2}, {3'd0}};

assign tmp_169_3_fu_1645_p3 = {{tmp_16989_3_fu_2462_p2}, {3'd0}};

assign tmp_169_4_fu_1705_p3 = {{tmp_16989_4_fu_2475_p2}, {3'd0}};

assign tmp_169_5_fu_1765_p3 = {{tmp_16989_5_fu_2488_p2}, {3'd0}};

assign tmp_169_6_fu_1825_p3 = {{tmp_16989_6_fu_2501_p2}, {3'd0}};

assign tmp_169_7_fu_1885_p3 = {{tmp_16989_7_fu_2514_p2}, {3'd0}};

assign tmp_170_2_fu_1034_p1 = ret_V_25_2_fu_1003_p3;

assign tmp_170_3_fu_1079_p1 = $unsigned(ret_V_25_3_cast_fu_1055_p1);

assign tmp_170_4_fu_1099_p1 = p_shl1_fu_1038_p3;

assign tmp_170_5_fu_1125_p1 = ret_V_25_5_fu_1103_p2;

assign tmp_170_6_fu_1155_p1 = ret_V_25_6_fu_1129_p2;

assign tmp_170_7_fu_1179_p1 = $unsigned(tmp_51_fu_894_p2);

assign tmp_174_1_fu_1963_p2 = ($signed(tmp3_1_reg_2915) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_2_fu_1974_p2 = ($signed(tmp3_2_reg_2920) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_3_fu_1985_p2 = ($signed(tmp3_3_reg_2925) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_4_fu_1996_p2 = ($signed(tmp3_4_reg_2930) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_5_fu_2007_p2 = ($signed(tmp3_5_reg_2935) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_6_fu_2018_p2 = ($signed(tmp3_6_reg_2940) + $signed(tmp_76_fu_1938_p1));

assign tmp_174_7_fu_2029_p2 = ($signed(tmp3_7_reg_2945) + $signed(tmp_76_fu_1938_p1));

assign tmp_178_1_fu_1556_p2 = ((i_op_assign_8_1_fu_1537_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_2_fu_1616_p2 = ((i_op_assign_8_2_fu_1597_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_3_fu_1676_p2 = ((i_op_assign_8_3_fu_1657_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_4_fu_1736_p2 = ((i_op_assign_8_4_fu_1717_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_5_fu_1796_p2 = ((i_op_assign_8_5_fu_1777_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_6_fu_1856_p2 = ((i_op_assign_8_6_fu_1837_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_178_7_fu_1916_p2 = ((i_op_assign_8_7_fu_1897_p2 < tmp_52_reg_2653) ? 1'b1 : 1'b0);

assign tmp_181_1_fu_1968_p1 = $signed(tmp_174_1_fu_1963_p2);

assign tmp_181_2_fu_1979_p1 = $signed(tmp_174_2_fu_1974_p2);

assign tmp_181_3_fu_1990_p1 = $signed(tmp_174_3_fu_1985_p2);

assign tmp_181_4_fu_2001_p1 = $signed(tmp_174_4_fu_1996_p2);

assign tmp_181_5_fu_2012_p1 = $signed(tmp_174_5_fu_2007_p2);

assign tmp_181_6_fu_2023_p1 = $signed(tmp_174_6_fu_2018_p2);

assign tmp_181_7_fu_2034_p1 = $signed(tmp_174_7_fu_2029_p2);

assign tmp_302_fu_807_p4 = {{p_neg_fu_801_p2[16:3]}};

assign tmp_303_fu_817_p1 = $signed(tmp_302_fu_807_p4);

assign tmp_304_fu_825_p4 = {{tmp_110_tr_fu_787_p2[16:3]}};

assign tmp_305_fu_835_p1 = $signed(tmp_304_fu_825_p4);

assign tmp_47_fu_857_p1 = cnn_cnvPara_pad_w_V_read;

assign tmp_48_cast_fu_860_p1 = ret_V_s_reg_2596;

assign tmp_49_fu_863_p0 = cnn_iPara_width_read;

assign tmp_49_fu_863_p2 = ($signed(tmp_49_fu_863_p0) + $signed(tmp_48_cast_fu_860_p1));

assign tmp_50_cast1_fu_879_p1 = cnn_cnvPara_stride_w_V_read;

assign tmp_50_fu_876_p1 = cnn_cnvPara_stride_w_V_read;

assign tmp_51_cast_fu_900_p1 = tmp_51_fu_894_p2;

assign tmp_51_fu_894_p2 = (p_shl_cast_fu_890_p1 - tmp_50_cast1_fu_879_p1);

assign tmp_52_cast1_fu_907_p1 = cnn_cnvPara_kernel_w_V_read;

assign tmp_52_cast_fu_910_p1 = cnn_cnvPara_kernel_w_V_read;

assign tmp_52_fu_904_p1 = cnn_cnvPara_kernel_w_V_read;

assign tmp_53_fu_913_p2 = ($signed(tmp_51_cast_fu_900_p1) + $signed(tmp_52_cast1_fu_907_p1));

assign tmp_55_fu_947_p2 = ((sbufIndex_read == hIndexPre1) ? 1'b1 : 1'b0);

assign tmp_58_fu_1207_p3 = ((ult_reg_2626[0:0] === 1'b1) ? wog_cast_mid1_fu_1191_p1 : mt_fu_1199_p3);

assign tmp_58_mid1_fu_1276_p3 = ((ult_reg_2626[0:0] === 1'b1) ? wog_cast_fu_1240_p1 : mt_mid1_fu_1268_p3);

assign tmp_58_mid2_fu_1283_p3 = ((tmp_59_fu_1218_p2[0:0] === 1'b1) ? tmp_58_fu_1207_p3 : tmp_58_mid1_fu_1276_p3);

assign tmp_59_fu_1218_p2 = (($signed(woc_cast_fu_1214_p1) < $signed(woConsume_reg_2673)) ? 1'b1 : 1'b0);

assign tmp_61_fu_839_p2 = (16'd0 - tmp_s_fu_821_p1);

assign tmp_62_fu_845_p1 = $unsigned(tmp_305_fu_835_p1);

assign tmp_64_fu_849_p3 = ((tmp_1546_fu_793_p3[0:0] === 1'b1) ? tmp_61_fu_839_p2 : tmp_62_fu_845_p1);

assign tmp_64_not_fu_1441_p2 = (($signed(id_reg_672) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign tmp_65_fu_1347_p2 = ($signed(16'd65535) + $signed(id_reg_672));

assign tmp_67_fu_965_p1 = cnn_iPara_ciGroup_V_read;

assign tmp_68_cast_fu_783_p1 = $signed(woTotal_fu_777_p2);

assign tmp_68_fu_969_p2 = (tmp_52_cast_fu_910_p1 - p_shl_cast_fu_890_p1);

assign tmp_69_fu_975_p1 = cnn_cnvPara_stride_w_V_read;

assign tmp_73_fu_2527_p1 = tmp_67_reg_2681;

assign tmp_74_fu_1328_p1 = cnn_iPara_width_read;

assign tmp_74_fu_1328_p2 = (($signed(wIndex_fu_1306_p2) < $signed(tmp_74_fu_1328_p1)) ? 1'b1 : 1'b0);

assign tmp_76_fu_1938_p1 = t_V_reg_682;

assign tmp_77_fu_1947_p1 = $signed(ibufAddr_fu_1942_p2);

assign tmp_78_fu_2194_p1 = tmp_1569_fu_2040_p1;

assign tmp_79_fu_2198_p1 = p_Result_1_fu_2044_p4;

assign tmp_80_fu_2208_p1 = p_Result_2_fu_2054_p4;

assign tmp_81_fu_2212_p1 = p_Result_3_fu_2064_p4;

assign tmp_82_fu_2222_p1 = p_Result_4_fu_2074_p4;

assign tmp_83_fu_2226_p1 = p_Result_5_fu_2084_p4;

assign tmp_84_fu_2236_p1 = p_Result_6_fu_2094_p4;

assign tmp_85_fu_2240_p1 = p_Result_7_fu_2104_p4;

assign tmp_86_fu_2250_p1 = p_Result_8_fu_2114_p4;

assign tmp_87_fu_2254_p1 = p_Result_9_fu_2124_p4;

assign tmp_88_fu_2264_p1 = p_Result_s_fu_2134_p4;

assign tmp_89_fu_2268_p1 = p_Result_10_fu_2144_p4;

assign tmp_90_fu_2278_p1 = p_Result_11_fu_2154_p4;

assign tmp_91_fu_2282_p1 = p_Result_12_fu_2164_p4;

assign tmp_92_fu_2292_p1 = p_Result_13_fu_2174_p4;

assign tmp_93_fu_2296_p1 = p_Result_14_fu_2184_p4;

assign tmp_95_fu_2423_p0 = id_tmp_s_fu_1458_p3[12:0];

assign tmp_95_fu_2423_p1 = tmp_69_reg_2699;

assign tmp_97_fu_1470_p3 = {{tmp_95_fu_2423_p2}, {3'd0}};

assign tmp_cast_fu_758_p1 = cnn_cnvPara_kernel_w_V_read;

assign tmp_s_fu_821_p1 = $unsigned(tmp_303_fu_817_p1);

assign ult_fu_761_p2 = ((tmp_cast_fu_758_p1 < ret_V_9_fu_751_p3) ? 1'b1 : 1'b0);

assign wIndex_fu_1306_p2 = (w_reg_2804 - tmp_47_reg_2637);

assign w_fu_1295_p2 = (woc_cast1_fu_1291_p1 + tmp_58_mid2_fu_1283_p3);

assign woConsume_fu_919_p3 = ((ult_fu_761_p2[0:0] === 1'b1) ? 10'd1 : tmp_53_fu_913_p2);

assign woGroup_fu_868_p3 = ((ult_fu_761_p2[0:0] === 1'b1) ? tmp_49_fu_863_p2 : tmp_64_fu_849_p3);

assign woTotal_fu_777_p2 = (16'd1 + tmp_1545_fu_773_p1);

assign woc_1_fu_2412_p2 = (woc_mid2_reg_2789 + 9'd1);

assign woc_cast1_fu_1291_p1 = woc_mid2_fu_1244_p3;

assign woc_cast_fu_1214_p1 = woc_reg_661;

assign woc_mid2_fu_1244_p3 = ((tmp_59_fu_1218_p2[0:0] === 1'b1) ? woc_reg_661 : 9'd0);

assign wog_cast_fu_1240_p1 = wog_s_fu_1234_p2;

assign wog_cast_mid1_fu_1191_p1 = wog_reg_650;

assign wog_s_fu_1234_p2 = (15'd1 + wog_reg_650);

always @ (posedge ap_clk) begin
    ret_V_s_reg_2596[0] <= 1'b0;
    tmp_47_reg_2637[15:5] <= 11'b00000000000;
    tmp_50_reg_2642[15:5] <= 11'b00000000000;
    p_shl_cast2_reg_2647[2:0] <= 3'b000;
    p_shl_cast2_reg_2647[15:8] <= 8'b00000000;
    tmp_52_reg_2653[15:5] <= 11'b00000000000;
    tmp_67_reg_2681[15:13] <= 3'b000;
    tmp_69_reg_2699[12:5] <= 8'b00000000;
    tmp_170_2_reg_2721[0] <= 1'b0;
    tmp_170_2_reg_2721[15:6] <= 10'b0000000000;
    tmp_170_3_reg_2731[15:9] <= 7'b0000000;
    tmp_170_4_reg_2741[1:0] <= 2'b00;
    tmp_170_4_reg_2741[15:7] <= 9'b000000000;
    tmp_170_5_reg_2751[15:8] <= 8'b00000000;
    tmp_170_6_reg_2761[0] <= 1'b0;
    tmp_170_6_reg_2761[15:9] <= 7'b0000000;
    tmp_170_7_reg_2771[15:9] <= 7'b0000000;
end

endmodule //multiSlideWindowsFla
